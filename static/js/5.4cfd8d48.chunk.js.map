{"version":3,"sources":["APIRequest/UsersAPIRequest.js","components/Users/CreatePassword.jsx"],"names":["AxiosHeader","headers","getToken","LoginRequest","_x","_x2","_LoginRequest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","URL","PostBody","res","wrap","_context","prev","next","store","dispatch","ShowLoader","BaseURL","axios","post","sent","setToken","data","setUserDetails","SuccessToast","HideLoader","abrupt","t0","ErrorToast","stop","RegistrationRequest","_x3","_x4","_x5","_x6","_x7","_x8","_RegistrationRequest","_callee2","firstName","lastName","mobile","photo","_context2","status","GetProfileDetails","_GetProfileDetails","_callee3","_context3","get","SetProfile","ProfileUpdateRequest","_x9","_x10","_x11","_x12","_x13","_x14","_ProfileUpdateRequest","_callee4","UserDetails","_context4","RecoverVerifyEmailRequest","_x15","_RecoverVerifyEmailRequest","_callee5","_context5","setEmail","RecoverVerifyOTPRequest","_x16","_x17","_RecoverVerifyOTPRequest","_callee6","OTP","_context6","setOTP","RecoverResetPassRequest","_x18","_x19","_x20","_RecoverResetPassRequest","_callee7","_context7","CreatePassword","PasswordRef","ConfirmPasswordRef","useRef","navigate","useNavigate","ResetPass","_ref","Password","ConfirmPassword","value","IsEmpty","getEmail","getOTP","_jsx","Fragment","children","className","_jsxs","readOnly","placeholder","type","ref","input","onClick"],"mappings":"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","file":"static/js/5.4cfd8d48.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\r\nimport {SetProfile} from \"../redux/state-slice/profile-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\n\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function LoginRequest(email,password){\r\n   try {\r\n       debugger;\r\n       store.dispatch(ShowLoader())\r\n       debugger;\r\n       let URL=BaseURL+\"/Login\";\r\n       debugger;\r\n       let PostBody={\"email\":email,\"password\":password}\r\n       debugger;\r\n       let res =await axios.post(URL,PostBody);\r\n       debugger;\r\n       setToken(res.data['token']);\r\n       debugger;\r\n       setUserDetails(res.data['data']);\r\n       debugger;\r\n       SuccessToast(\"Login Success\")\r\n       debugger;\r\n       store.dispatch(HideLoader())\r\n       debugger;\r\n       return true;\r\n   }\r\n   catch (e) {\r\n       store.dispatch(HideLoader())\r\n       ErrorToast(\"Invalid Email or Password\")\r\n       return  false;\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport async function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/Registration\";\r\n        let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password, photo:photo}\r\n        let res=await axios.post(URL,PostBody)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                if(res.data['data']['keyPattern']['email']===1){\r\n                    ErrorToast(\"Email Already Exist\")\r\n                    return false;\r\n                }\r\n                else{\r\n                    ErrorToast(\"Something Went Wrong\")\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                SuccessToast(\"Registration Success\")\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function GetProfileDetails(){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/ProfileDetails\";\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetProfile(res.data['data'][0]))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n    }\r\n}\r\n\r\nexport async function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/ProfileUpdate\";\r\n        let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\r\n        let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo};\r\n        let res=await axios.post(URL,PostBody,AxiosHeader);\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Profile Update Success\")\r\n            setUserDetails(UserDetails)\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }\r\n    catch (e){\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport async function RecoverVerifyEmailRequest(email){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/RecoverVerifyEmail/\"+email;\r\n        let res=await axios.get(URL);\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(\"No user found\");\r\n                return false;\r\n            }\r\n            else{\r\n                setEmail(email)\r\n                SuccessToast(\"A 6 Digit verification code has been sent to your email address. \");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\");\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function RecoverVerifyOTPRequest(email,OTP){\r\n    debugger;\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL=BaseURL+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\r\n        let res=await axios.get(URL);\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(\"Code Verification Fail\");\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"Code Verification Success\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        debugger;\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function RecoverResetPassRequest(email,OTP,password){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/RecoverResetPass\";\r\n        let PostBody={email:email,OTP:OTP,password:password};\r\n        let res=await axios.post(URL,PostBody);\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"NEW PASSWORD CREATED\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    }\r\n}","import React, {Fragment, useRef} from 'react';\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport {RecoverResetPassRequest} from \"../../APIRequest/UsersAPIRequest\";\nimport {getEmail, getOTP} from \"../../helper/SessionHelper\";\nimport {useNavigate} from \"react-router-dom\";\nconst CreatePassword = () => {\n\n    let PasswordRef,ConfirmPasswordRef=useRef();\n    let navigate=useNavigate();\n\n    const ResetPass =async () => {\n        let Password = PasswordRef.value;\n        let ConfirmPassword =  ConfirmPasswordRef.value;\n        if(IsEmpty(Password)){\n            ErrorToast(\"Password Required\")\n        }\n        else if(IsEmpty(ConfirmPassword)){\n            ErrorToast(\"Confirm Password Required\")\n        }\n        else if(Password!==ConfirmPassword){\n            ErrorToast(\"Password & Confirm Password Should be Same\")\n        }\n        else{\n            let result= await RecoverResetPassRequest(getEmail(),getOTP(),Password);\n            if(result===true){\n                navigate(\"/Login\")\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-7 text-start col-lg-6 center-screen\">\n                        <div className=\"card w-90 p-4\">\n                            <div className=\"card-body\">\n                                <h4>SET NEW PASSWORD</h4>\n                                <br/>\n                                <label>Your email address</label>\n                                <input readOnly={true} value={getEmail()} placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"email\"/>\n                                <br/>\n                                <label>New Password</label>\n                                <input  ref={(input)=>PasswordRef=input} placeholder=\"New Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\n                                <br/>\n                                <label>Confirm Password</label>\n                                <input  ref={(input)=>ConfirmPasswordRef=input} placeholder=\"Confirm Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\n                                <br/>\n                                <button onClick={ResetPass} className=\"btn w-100 btn-success\">Next</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\nexport default CreatePassword;"],"sourceRoot":""}