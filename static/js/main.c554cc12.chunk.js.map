{"version":3,"sources":["helper/config.js","assets/images/Logo.svg","components/MasterLayout/MasterLayout.jsx","components/MasterLayout/LazyLoader.jsx","pages/Dashboard/DashboardPage.jsx","pages/NotFound/Page404.jsx","components/MasterLayout/FullscreenLoader.jsx","pages/Users/LoginPage.jsx","pages/Users/RegistrationPage.jsx","pages/Users/SendOTPPage.jsx","pages/Users/VerifyOTPPage.jsx","pages/Users/CreatePasswordPage.jsx","pages/Users/ProfilePage.jsx","APIRequest/BrandAPIRequest.js","components/Brand/BrandCreateUpdate.jsx","pages/Brand/BrandCreateUpdatePage.jsx","helper/DeleteAlert.js","components/Brand/BrandList.jsx","pages/Brand/BrandListPage.jsx","APIRequest/CategoryAPIRequest.js","components/Category/CategoryCreateUpdate.jsx","pages/Category/CategoryCreateUpdatePage.jsx","components/Category/CategoryList.jsx","pages/Category/CategoryListPage.jsx","APIRequest/CustomerAPIRequest.js","components/Customer/CustomerCreateUpdate.jsx","pages/Customer/CustomerCreateUpdatePage.jsx","components/Customer/CustomerList.jsx","pages/Customer/CustomerListPage.jsx","APIRequest/ExpenseTypeAPIRequest.js","components/ExpenseType/ExpenseTypeCreateUpdate.jsx","pages/ExpenseType/ExpenseTypeCreateUpdatePage.jsx","APIRequest/ExpenseAPIRequest.js","components/Expense/ExpenseList.jsx","pages/Expense/ExpenseListPage.jsx","components/Expense/ExpenseCreateUpdate.jsx","pages/Expense/ExpenseCreateUpdatePage.jsx","APIRequest/ProductAPIRequest.js","components/Product/ProductCreateUpdate.jsx","pages/Product/ProductCreateUpdatePage.jsx","components/Product/ProductList.jsx","pages/Product/ProductListPage.jsx","APIRequest/PurchaseAPIRequest.js","components/Purchase/PurchaseCreateUpdate.jsx","pages/Purchase/PurchaseCreateUpdatePage.jsx","components/Purchase/PurchaseList.jsx","pages/Purchase/PurchaseListPage.jsx","APIRequest/ReportAPIRequest.js","components/Report/PurchaseReport.jsx","pages/Report/PurchaseReportPage.jsx","components/Report/ReturnReport.jsx","pages/Report/ReturnReportPage.jsx","components/Report/SaleReport.jsx","pages/Report/SaleReportPage.jsx","components/Report/ExpenseReport.jsx","pages/Report/ExpenseReportPage.jsx","components/Return/ReturnCreateUpdate.jsx","pages/Return/ReturnCreateUpdatePage.jsx","components/Return/ReturnList.jsx","pages/Return/ReturnListPage.jsx","APIRequest/SaleAPIRequest.js","components/Sales/SalesCreateUpdate.jsx","pages/Sales/SalesCreateUpdatePage.jsx","components/Sales/SalesList.jsx","pages/Sales/SalesListPage.jsx","APIRequest/SupplierAPIRequest.js","components/Supplier/SupplierCreateUpdate.jsx","pages/Supplier/SupplierCreateUpdatePage.jsx","components/Supplier/SupplierList.jsx","pages/Supplier/SupplierListPage.jsx","components/ExpenseType/ExpenseTypeList.jsx","pages/ExpenseType/ExpenseTypeListPage.jsx","App.js","index.js","helper/SessionHelper.js","redux/state-slice/product-slice.js","redux/state-slice/purchase-slice.js","redux/state-slice/sale-slice.js","redux/state-slice/supplier-slice.js","redux/state-slice/expense-slice.js","redux/state-slice/customer-slice.js","redux/store/store.js","redux/state-slice/return-slice.js","redux/state-slice/brand-slice.js","redux/state-slice/category-slice.js","redux/state-slice/expensetype-slice.js","helper/FormHelper.js","redux/state-slice/report-slice.js","redux/state-slice/settings-slice.js","redux/state-slice/profile-slice.js","redux/state-slice/dashboard-slice.js"],"names":["BaseURL","MasterLayout","props","contentRef","sideNavRef","topNavRef","useRef","sidebarItems","title","icon","_jsx","RiDashboardLine","className","url","subMenu","BsPeople","BsCircle","size","TbTruckDelivery","AiOutlineBank","IoCreateOutline","AiOutlineUnorderedList","BsBox","BsBagPlus","BsCartPlus","BsBagX","BsGraphUp","_jsxs","Fragment","children","Navbar","Container","fluid","Brand","ref","div","onClick","sideNav","content","topNav","classList","contains","add","remove","AiOutlineMenu","src","getUserDetails","alt","NavLink","to","AiOutlineUser","removeSessions","AiOutlineLogout","end","logo","Accordion","defaultActiveKey","concat","urlList","map","item","push","subItem","findIndex","items","includes","window","location","pathname","isSidebarAccordionActive","index","length","Item","eventKey","Header","Body","navData","isActive","toString","LazyLoader","Dashboard","lazy","DashboardPage","Suspense","fallback","NotFound","Page404","FullscreenLoader","settings","useSelector","state","loader","Login","LoginPage","Registration","RegistrationPage","SendOTP","SendOTPPage","VerifyOTP","VerifyOTPPage","CreatePassword","CreatePasswordPage","Profile","ProfilePage","AxiosHeader","headers","getToken","BrandListRequest","_x","_x2","_x3","_BrandListRequest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pageNo","perPage","searchKeyword","URL","result","wrap","_context","prev","next","store","dispatch","ShowLoader","axios","get","sent","HideLoader","status","data","SetBrandList","SetBrandListTotal","ErrorToast","t0","stop","CreateBrandRequest","_x4","_x5","_CreateBrandRequest","_callee2","PostBody","ObjectID","_context2","post","SuccessToast","ResetBrandFormValue","abrupt","FillBrandFormRequest","_x6","_FillBrandFormRequest","_callee3","FormValue","_context3","OnChangeBrandInput","Name","Value","DeleteBrandRequest","_x7","_DeleteBrandRequest","_callee4","_context4","BrandCreateUpdate","brand","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","SetObjectID","useEffect","id","URLSearchParams","search","SaveChange","_ref2","IsEmpty","onChange","e","target","value","type","BrandCreateUpdatePage","DeleteAlert","_DeleteAlert","Swal","fire","allowOutsideClick","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","BrandList","setSearchKeyword","_useState3","_useState4","setPerPage","DataList","List","Total","ListTotal","handlePageClick","event","selected","searchData","_ref3","perPageOnChange","_ref4","parseInt","searchKeywordOnChange","_ref5","_callee5","_context5","DeleteItem","_ref6","_callee6","_context6","isConfirmed","onKeyUp","document","querySelectorAll","forEach","row","style","display","innerText","placeholder","i","moment","CreatedDate","format","Link","_id","AiOutlineEdit","bind","AiOutlineDelete","ReactPaginate","previousLabel","nextLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","BrandListPage","CategoryListRequest","_CategoryListRequest","SetCategoryList","SetCategoryListTotal","CreateCategoryRequest","_CreateCategoryRequest","ResetCategoryFormValue","FillCategoryFormRequest","_FillCategoryFormRequest","OnChangeCategoryInput","DeleteCategoryRequest","_DeleteCategoryRequest","CategoryCreateUpdate","category","CategoryCreateUpdatePage","CategoryList","CategoryListPage","CustomerListRequest","_CustomerListRequest","SetCustomerList","SetCustomerListTotal","CreateCustomerRequest","_CreateCustomerRequest","ResetFormValue","FillCustomerFormRequest","_FillCustomerFormRequest","OnChangeCustomerInput","DeleteCustomerRequest","_DeleteCustomerRequest","CustomerCreateUpdate","customer","CustomerName","Phone","IsEmail","Email","Address","rows","CustomerCreateUpdatePage","CustomerList","CustomerListPage","ExpenseTypeListRequest","_ExpenseTypeListRequest","SetExpenseTypeList","SetExpenseTypeListTotal","CreateExpenseTypeRequest","_CreateExpenseTypeRequest","ResetExpenseTypeFormValue","FillExpenseTypeFormRequest","_FillExpenseTypeFormRequest","OnChangeExpenseTypeInput","DeleteExpenseTypeRequest","_DeleteExpenseTypeRequest","ExpenseTypeCreateUpdate","expensetype","ExpenseTypeCreateUpdatePage","ExpenseListRequest","_ExpenseListRequest","SetExpenseList","SetExpenseListTotal","ExpenseTypeDropDownRequest","_ExpenseTypeDropDownRequest","SetExpenseTypeDropDown","CreateExpenseRequest","_CreateExpenseRequest","ResetExpenseFormValue","FillExpenseFormRequest","_FillExpenseFormRequest","OnChangeExpenseInput","DeleteExpenseRequest","_DeleteExpenseRequest","ExpenseList","expense","Type","CurrencyFormat","Amount","displayType","thousandSeparator","prefix","Note","ExpenseListPage","ExpenseCreateUpdate","ExpenseTypeDropDown","TypeID","toLocaleString","ExpenseCreateUpdatePage","ProductListRequest","_ProductListRequest","SetProductList","SetProductListTotal","CreateProductRequest","_CreateProductRequest","ResetProductFormValue","FillProductFormRequest","_FillProductFormRequest","OnChangeProductInput","ProductCategoryDropDownRequest","_ProductCategoryDropDownRequest","SetProductCategoryDropDown","ProductBrandDropDownRequest","_ProductBrandDropDownRequest","SetProductBrandDropDown","DeleteProductRequest","_DeleteProductRequest","ProductCreateUpdate","product","ProductBrandDropDown","ProductCategoryDropDown","BrandID","CategoryID","Unit","Details","ProductCreateUpdatePage","ProductList","brands","categories","ProductListPage","PurchaseListRequest","_PurchaseListRequest","SetPurchaseList","SetPurchaseListTotal","ProductDropDownRequest","_ProductDropDownRequest","SetProductDropDown","SupplierDropDownRequest","_SupplierDropDownRequest","SetSupplierDropDown","CreatePurchaseRequest","_CreatePurchaseRequest","ParentBody","ChildsBody","PurchaseCreateUpdate","productRef","qtyRef","unitPriceRef","SupplierDropDown","purchase","ProductDropDown","PurchaseItemList","PurchaseFormValue","removeCart","RemovePurchaseItem","CreateNewPurchase","res","alert","OnChangePurchaseInput","input","productValue","productName","selectedOptions","qtyValue","unitPriceValue","SetPurchaseItemList","BsCartCheck","ProductName","Qty","UnitCost","BsTrash","PurchaseCreateUpdatePage","PurchaseList","DetailsPopUp","suppliers","GrandTotal","ShippingCost","VatTax","OtherCost","Discount","AiOutlineEye","PurchaseListPage","ExpensesByDateRequest","_ExpensesByDateRequest","FormData","ToDate","SetExpensesByDateList","SalesByDateRequest","_SalesByDateRequest","SetSalesByDateList","PurchaseByDateRequest","_PurchaseByDateRequest","SetPurchaseByDateList","ReturnByDateRequest","_x8","_ReturnByDateRequest","SetReturnByDateList","PurchaseReport","formRef","toRef","report","PurchaseByDateList","CreateReport","_ref","formRefValue","toRefValue","OnExport","exportType","ReportData","listItem","exportFromJSON","fileName","_this","PurchaseReportPage","ReturnReport","ReturnByDateList","ReturnReportPage","SaleReport","SalesByDateList","SaleReportPage","ExpenseReport","ExpensesByDateList","ExpenseReportPage","ReturnCreateUpdate","CustomerDropDownRequest","CustomerDropDown","return","ReturnItemList","ReturnFormValue","RemoveReturnItem","CreateNewReturn","CreateReturnRequest","OnChangeReturnInput","SetReturnItemList","ReturnCreateUpdatePage","ReturnList","ReturnListRequest","customers","ReturnListPage","SaleListRequest","_SaleListRequest","SetSaleList","SetSaleListTotal","_CustomerDropDownRequest","SetCustomerDropDown","CreateSaleRequest","_CreateSaleRequest","SalesCreateUpdate","sale","SaleItemList","SaleFormValue","RemoveSaleItem","CreateNewSale","OnChangeSaleInput","SetSaleItemList","SalesCreateUpdatePage","SalesList","SalesListPage","SupplierListRequest","_SupplierListRequest","SetSupplierList","SetSupplierListTotal","CreateSupplierRequest","_CreateSupplierRequest","ResetSupplierFormValue","FillSupplierFormRequest","_FillSupplierFormRequest","OnChangeSupplierInput","DeleteSupplierRequest","_DeleteSupplierRequest","SupplierCreateUpdate","supplier","SupplierCreateUpdatePage","SupplierList","SupplierListPage","ExpenseTypeList","ExpenseTypeListPage","App","BrowserRouter","Routes","Route","exact","path","element","Navigate","replace","rootElement","getElementById","createRoot","render","StrictMode","Provider","_SessionHelper","SessionHelper","_classCallCheck","localStorage","clear","href","_createClass","key","token","setItem","getItem","UserDetails","JSON","stringify","parse","OTP","setEmail","getEmail","setOTP","getOTP","setToken","setUserDetails","productSlice","createSlice","name","initialState","reducers","action","payload","Object","keys","_productSlice$actions","actions","purchaseSlice","SupplierID","splice","_purchaseSlice$action","saleSlice","CustomerID","_saleSlice$actions","supplierSlice","_supplierSlice$action","expenseSlice","_expenseSlice$actions","customerSlice","_customerSlice$action","configureStore","reducer","settingsReducer","dashboard","dashboardReducer","profile","profileReducer","brandReducer","supplierReducer","categoryReducer","customerReducer","expenseReducer","expensetypeReducer","purchaseReducer","reportReducer","productReducer","returnReducer","saleReducer","returnSlice","SetReturnList","SetReturnListTotal","_returnSlice$actions","brandSlice","_brandSlice$actions","categorySlice","_categorySlice$action","expensetypeSlice","_expensetypeSlice$act","EmailRegx","MobileRegx","_FormHelper","FormHelper","test","msg","cogoToast","error","position","success","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","IsMobile","getBase64","reportSlice","_reportSlice$actions","settingsSlice","_settingsSlice$action","profileSlice","SetProfile","dashboardSlice","ExpenseChart","PurchaseChart","ReturnChart","SaleChart","ExpenseTotal","SaleTotal","PurchaseTotal","ReturnTotal","SetExpenseChart","SetSaleChart","SetPurchaseChart","SetReturnChart","SetExpenseTotal","SetSaleTotal","SetPurchaseTotal","SetReturnTotal","_dashboardSlice$actio"],"mappings":"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","file":"static/js/main.c554cc12.chunk.js","sourcesContent":["export const BaseURL=\"https://inventory-sunny.cyclic.app/api/v1\";","export default __webpack_public_path__ + \"static/media/Logo.49181b57.svg\";","import React, { Fragment, useRef } from 'react';\nimport { Accordion, Container, Navbar } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport {AiOutlineBank, AiOutlineLogout, AiOutlineMenu, AiOutlineUser} from 'react-icons/ai';\nimport {BsBagPlus, BsBagX, BsBox, BsCartPlus, BsCircle, BsGraphUp, BsPeople} from 'react-icons/bs';\nimport {AiOutlineUnorderedList, IoCreateOutline, RiDashboardLine, TbTruckDelivery} from 'react-icons/all';\nimport logo from \"../../assets/images/Logo.svg\"\nimport {getUserDetails, removeSessions} from \"../../helper/SessionHelper\";\nconst MasterLayout = (props) => {\n  let contentRef, sideNavRef,topNavRef = useRef();\n\n  const MenuBarClickHandler = () => {\n    let sideNav = sideNavRef;\n    let content = contentRef;\n    let topNav = topNavRef;\n    if (sideNav.classList.contains('side-nav-open')) {\n      sideNav.classList.add('side-nav-close');\n      sideNav.classList.remove('side-nav-open');\n      content.classList.add('content-expand');\n      content.classList.remove('content');\n      topNav.classList.remove('top-nav-open');\n      topNav.classList.add('top-nav-close');\n    } else {\n      sideNav.classList.remove('side-nav-close');\n      sideNav.classList.add('side-nav-open');\n      content.classList.remove('content-expand');\n      content.classList.add('content');\n      topNav.classList.add('top-nav-open');\n      topNav.classList.remove('top-nav-close');\n    }\n  };\n\n  const isSidebarAccordionActive = () => {\n    let urlList = [];\n    sidebarItems.map((item) => {\n      urlList.push(\n          item.subMenu.map((subItem) => {\n            return subItem?.url;\n          })\n      );\n    });\n    return urlList.findIndex((items) =>\n        items.includes(window.location.pathname)\n    );\n  };\n\n  const sidebarItems = [\n    {\n      title: 'Dashboard',\n      icon: <RiDashboardLine className=\"side-bar-item-icon\" />,\n      url: '/',\n      subMenu: [],\n    },\n    {\n      title: 'Customer',\n      icon: <BsPeople  className=\"side-bar-item-icon\" />,\n      url: '/Customer',\n      subMenu: [\n        {\n          title: 'New Customer',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/CustomerCreateUpdatePage',\n        },\n        {\n          title: 'Customer List',\n          icon: (\n              <BsCircle size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/CustomerListPage',\n        },\n      ],\n    },\n    {\n      title: 'Supplier',\n      icon: <TbTruckDelivery className=\"side-bar-item-icon\" />,\n      url: '/Supplier',\n      subMenu: [\n        {\n          title: 'New Supplier',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/SupplierCreateUpdatePage',\n        },\n        {\n          title: 'Supplier List',\n          icon: (\n              <BsCircle size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/SupplierListPage',\n        },\n      ],\n    },\n    {\n      title: 'Expense',\n      icon: <AiOutlineBank  className=\"side-bar-item-icon\" />,\n      url: '/Expense',\n      subMenu: [\n        {\n          title: 'New Expense Type',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/ExpenseTypeCreateUpdatePage',\n        },\n        {\n          title: 'Expense Type List',\n          icon: (\n              <BsCircle size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/ExpenseTypeListPage',\n        },\n        {\n          title: 'New Expense',\n          icon: <IoCreateOutline  size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/ExpenseCreateUpdatePage',\n        },\n        {\n          title: 'Expense List',\n          icon: (\n              <AiOutlineUnorderedList size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/ExpenseListPage',\n        },\n      ],\n    },\n    {\n      title: 'Product',\n      icon: <BsBox className=\"side-bar-item-icon\" />,\n      url: '/Product',\n      subMenu: [\n        {\n          title: 'New Brand',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/BrandCreateUpdatePage',\n        },\n        {\n          title: 'Brand List',\n          icon: (\n              <BsCircle  size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/BrandListPage',\n        },\n        {\n          title: 'New Category',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/CategoryCreateUpdatePage',\n        },\n        {\n          title: 'Category List',\n          icon: (\n              <BsCircle size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/CategoryListPage',\n        },\n        {\n          title: 'New Product',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/ProductCreateUpdatePage',\n        },\n        {\n          title: 'Product List',\n          icon: (\n              <BsCircle  size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/ProductListPage',\n        },\n      ],\n    },\n    {\n      title: 'Purchase',\n      icon: <BsBagPlus className=\"side-bar-item-icon\" />,\n      url: '/Purchase',\n      subMenu: [\n        {\n          title: 'New Purchase',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/PurchaseCreateUpdatePage',\n        },\n        {\n          title: 'Purchase List',\n          icon: (\n              <BsCircle size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/PurchaseListPage',\n        },\n      ],\n    },\n    {\n      title: 'Sale',\n      icon: <BsCartPlus className=\"side-bar-item-icon\" />,\n      url: '/Sale',\n      subMenu: [\n        {\n          title: 'New Sale',\n          icon: <BsCircle  size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/SalesCreateUpdatePage',\n        },\n        {\n          title: 'Sale List',\n          icon: (\n              <BsCircle size={16} className=\"side-bar-subitem-icon\" />\n          ),\n          url: '/SalesListPage',\n        },\n      ],\n    },\n    {\n      title: 'Return',\n      icon: <BsBagX className=\"side-bar-item-icon\" />,\n      url: '/Return',\n      subMenu: [\n        {\n          title: 'New Return',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/ReturnCreateUpdatePage',\n        },\n        {\n          title: 'Return List',\n          icon: (<BsCircle size={16} className=\"side-bar-subitem-icon\" />),\n          url: '/ReturnListPage',\n        },\n      ],\n    },\n    {\n      title: 'Report',\n      icon: <BsGraphUp className=\"side-bar-item-icon\" />,\n      url: '/Report',\n      subMenu: [\n        {\n          title: 'Sale Report',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/SaleReportPage',\n        },\n        {\n          title: 'Return Report',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/ReturnReportPage',\n        },\n        {\n          title: 'Purchase Report',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/PurchaseReportPage',\n        },\n        {\n          title: 'Expense Report',\n          icon: <BsCircle size={16} className=\"side-bar-subitem-icon\" />,\n          url: '/ExpenseReportPage',\n        },\n      ],\n    },\n  ];\n\n  const onLogout=()=>{\n    removeSessions();\n  }\n  return (\n      <Fragment>\n        <Navbar className=\"fixed-top px-0 \">\n          <Container fluid={true}>\n\n            <Navbar.Brand>\n              <div ref={(div) => {topNavRef = div}} className=\"top-nav-open\">\n                <h4 className=\"text-white m-0 p-0\"><a onClick={MenuBarClickHandler}><AiOutlineMenu /></a></h4>\n              </div>\n            </Navbar.Brand>\n\n            <div className=\"float-right h-auto d-flex align-items-center\">\n              <div className=\"user-dropdown\">\n                <img className=\"icon-nav-img icon-nav\" src={getUserDetails()['photo']} alt=\"\"/>\n                <div className=\"user-dropdown-content \">\n                  <div className=\"mt-4 text-center\">\n                    <img className=\"icon-nav-img\" src={getUserDetails()['photo']} alt=\"\"/>\n                    <h6>{getUserDetails()['firstName']}</h6>\n                    <hr className=\"user-dropdown-divider  p-0\"/>\n                  </div>\n                  <NavLink to=\"/Profile\" className=\"side-bar-item\">\n                    <AiOutlineUser className=\"side-bar-item-icon\" />\n                    <span className=\"side-bar-item-caption\">Profile</span>\n                  </NavLink>\n                  <a onClick={onLogout}  className=\"side-bar-item\">\n                    <AiOutlineLogout className=\"side-bar-item-icon\" />\n                    <span className=\"side-bar-item-caption\">Logout</span>\n                  </a>\n                </div>\n              </div>\n            </div>\n\n          </Container>\n        </Navbar>\n\n        <div ref={(div) => {sideNavRef = div}} className=\"side-nav-open border-radius-0 card\">\n          <NavLink to=\"/\" end className=\"d-flex justify-content-center sticky-top bg-white\">\n            <img src={logo} className=\"logo\"/>\n          </NavLink>\n\n          <Accordion defaultActiveKey={`${isSidebarAccordionActive()}`}>\n            {sidebarItems.map((item, index) => {\n              return item.subMenu.length !== 0 ? (\n                  <Accordion.Item\n                      key={index.toString()}\n                      eventKey={`${index}`}\n                      className=\"mt-2\"\n                  >\n                    <Accordion.Header>\n                      <div className=\"side-bar-item\">\n                        {item.icon}\n                        <span className=\"side-bar-item-caption\">\n                      {item.title}\n                    </span>\n                      </div>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      {item.subMenu.map((subItem, index) => (\n                          <NavLink\n                              key={index.toString()}\n                              className={(navData) =>\n                                  navData.isActive\n                                      ? 'side-bar-subitem-active side-bar-subitem '\n                                      : 'side-bar-subitem'\n                              }\n                              to={subItem?.url}\n                              end\n                          >\n                            {subItem?.icon}\n                            <span className=\"side-bar-subitem-caption\">\n                        {subItem?.title}\n                      </span>\n                          </NavLink>\n                      ))}\n                    </Accordion.Body>\n                  </Accordion.Item>\n              ) : (\n                  <NavLink\n                      className={(navData) =>\n                          navData.isActive\n                              ? 'side-bar-item-active side-bar-item mt-2'\n                              : 'side-bar-item mt-2'\n                      }\n                      to={'/'}\n                      end\n                  >\n                    {item.icon}\n                    <span className=\"side-bar-item-caption\">\n                  {item.title}\n                </span>\n                  </NavLink>\n              );\n            })}\n          </Accordion>\n        </div>\n\n\n        <div ref={(div) => (contentRef = div)} className=\"content\">\n          {props.children}\n        </div>\n      </Fragment>\n  );\n};\n\nexport default MasterLayout;\n","import React from 'react';\nconst LazyLoader = () => {\n    return (\n        <div className=\"LoadingOverlay\">\n            <div className=\"Line-Progress\">\n                <div className=\"indeterminate\"/>\n            </div>\n        </div>\n    );\n};\nexport default LazyLoader;","import React, {Fragment,Suspense,lazy} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst Dashboard =lazy(() => import('../../components/Dashboard/Dashboard'));\nconst DashboardPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <Dashboard/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default DashboardPage;","import React, {Fragment, lazy, Suspense} from 'react';\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst NotFound =lazy(() => import('../../components/NotFound/NotFound'));\nconst Page404 = () => {\n    return (\n        <Fragment>\n            <Suspense fallback={<LazyLoader/>}>\n                <NotFound/>\n            </Suspense>\n        </Fragment>\n    );\n};\n\nexport default Page404;","import React, {Fragment} from 'react';\nimport {useSelector} from \"react-redux\";\nconst FullscreenLoader = () => {\n    const settings = useSelector((state) => state.settings.loader)\n    return (\n        <Fragment>\n            <div  className={settings + \" LoadingOverlay\"}>\n                <div className=\"Line-Progress\">\n                    <div className=\"indeterminate\"/>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\nexport default FullscreenLoader;","import React, {Fragment, lazy, Suspense} from 'react';\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst Login =lazy(() => import('../../components/Users/Login'));\nconst LoginPage = () => {\n    return (\n        <Fragment>\n            <Suspense fallback={<LazyLoader/>}>\n                <Login/>\n            </Suspense>\n        </Fragment>\n    );\n};\n\nexport default LoginPage;","import React, {Fragment, lazy, Suspense} from 'react';\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst Registration =lazy(() => import('../../components/Users/Registration'));\nconst RegistrationPage = () => {\n    return (\n        <Fragment>\n            <Suspense fallback={<LazyLoader/>}>\n                <Registration/>\n            </Suspense>\n        </Fragment>\n    );\n};\n\nexport default RegistrationPage;","import React, {lazy, Suspense} from 'react';\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst SendOTP =lazy(() => import('../../components/Users/SendOTP'));\nconst SendOTPPage = () => {\n    return (\n        <Suspense fallback={<LazyLoader/>}>\n            <SendOTP/>\n        </Suspense>\n    );\n};\n\nexport default SendOTPPage;","import React, {lazy, Suspense} from 'react';\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst VerifyOTP =lazy(() => import('../../components/Users/VerifyOTP'));\nconst VerifyOTPPage = () => {\n    return (\n        <Suspense fallback={<LazyLoader/>}>\n            <VerifyOTP/>\n        </Suspense>\n    );\n};\nexport default VerifyOTPPage;","import React, { lazy, Suspense} from 'react';\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst CreatePassword =lazy(() => import('../../components/Users/CreatePassword'));\nconst CreatePasswordPage = () => {\n    return (\n        <Suspense fallback={<LazyLoader/>}>\n            <CreatePassword/>\n        </Suspense>\n    );\n};\nexport default CreatePasswordPage;","import React, {Fragment, lazy, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nconst Profile =lazy(() => import('../../components/Users/Profile'));\nconst ProfilePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <Profile/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\nexport default ProfilePage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {SetBrandList, SetBrandListTotal,ResetBrandFormValue,OnChangeBrandInput} from \"../redux/state-slice/brand-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function BrandListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/BrandList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetBrandList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetBrandListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetBrandList([]))\r\n                store.dispatch(SetBrandListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\nexport async function CreateBrandRequest(PostBody,ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CreateBrand\"\r\n        if(ObjectID!==0){\r\n            URL = BaseURL+\"/UpdateBrand/\"+ObjectID;\r\n        }\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            store.dispatch(ResetBrandFormValue())\r\n            return  true;\r\n        }\r\n        else if(result.status === 200 && result.data['status'] === \"fail\") {\r\n            if(result.data['data']['keyPattern']['Name']===1){\r\n                ErrorToast(\"Brand Name Already Exist\")\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\nexport async function FillBrandFormRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/BrandDetailsByID/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            let FormValue=result.data['data'][0];\r\n            store.dispatch(OnChangeBrandInput({Name:\"Name\",Value:FormValue['Name']}));\r\n            return  true;\r\n        } else {\r\n            debugger;\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        debugger;\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\nexport async function DeleteBrandRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/DeleteBrand/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"associate\") {\r\n            ErrorToast(result.data['data'])\r\n            return  false;\r\n        }\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {CreateBrandRequest, FillBrandFormRequest} from \"../../APIRequest/BrandAPIRequest\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport store from \"../../redux/store/store\";\nimport {OnChangeBrandInput} from \"../../redux/state-slice/brand-slice\";\n\nconst BrandCreateUpdate = () => {\n\n    let FormValue=useSelector((state)=>(state.brand.FormValue));\n    let navigate=useNavigate();\n    let [ObjectID,SetObjectID]=useState(0);\n\n    useEffect(()=>{\n        let params= new URLSearchParams(window.location.search);\n        let id=params.get('id');\n        if(id!==null){\n            SetObjectID(id);\n            (async () => {\n                await FillBrandFormRequest(id);\n            })();\n        }\n    },[])\n\n\n    const SaveChange = async () => {\n        if(IsEmpty(FormValue.Name)){\n            ErrorToast(\"Brand Name Required !\")\n        }\n        else {\n            if(await CreateBrandRequest(FormValue,ObjectID)){\n                navigate(\"/BrandListPage\")\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Save Brand</h5>\n                                <hr className=\"bg-light\"/>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Brand Name</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeBrandInput({Name:\"Name\",Value:e.target.value}))}} value={FormValue.Name} className=\"form-control form-control-sm\" type=\"text\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={SaveChange} className=\"btn btn-sm my-3 btn-success\">Save Change</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BrandCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport BrandCreateUpdate from \"../../components/Brand/BrandCreateUpdate\";\n\nconst BrandCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <BrandCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default BrandCreateUpdatePage;","import Swal from \"sweetalert2\";\r\n\r\n\r\nexport async function DeleteAlert() {\r\n    return await Swal.fire({\r\n        allowOutsideClick: false,\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n    });\r\n\r\n}","import React, {useEffect, useState,Fragment} from 'react';\nimport {BrandListRequest, DeleteBrandRequest} from \"../../APIRequest/BrandAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport ReactPaginate from \"react-paginate\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/all\";\nimport moment from 'moment';\nimport {DeleteAlert} from \"../../helper/DeleteAlert\";\nconst BrandList = () => {\n\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await BrandListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n\n    let DataList=useSelector((state)=>(state.brand.List));\n    let Total=useSelector((state)=>(state.brand.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await BrandListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n    const searchData=async () => {\n        await BrandListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await BrandListRequest(1, e.target.value, searchKeyword)\n    }\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await BrandListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n\n\n    const DeleteItem = async (id) => {\n        let Result = await DeleteAlert();\n        if(Result.isConfirmed){\n            let DeleteResult= await DeleteBrandRequest(id)\n            if(DeleteResult){\n                await BrandListRequest(1,perPage,searchKeyword);\n            }\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Brand List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">#No</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Brand Name</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Created</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item,i)=>\n                                                            <tr>\n                                                                <td><p className=\"text-xs text-start\">{i+1}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Name}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{moment(item.CreatedDate).format('MMMM Do YYYY')}</p></td>\n                                                                <td>\n                                                                    <Link to={`/BrandCreateUpdatePage?id=${item._id}`} className=\"btn text-info btn-outline-light p-2 mb-0 btn-sm\">\n                                                                        <AiOutlineEdit size={15} />\n                                                                    </Link>\n                                                                    <button onClick={DeleteItem.bind(this,item._id)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineDelete size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default BrandList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport BrandList from \"../../components/Brand/BrandList\";\nconst BrandListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                        <BrandList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\nexport default BrandListPage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {SetCategoryList, SetCategoryListTotal,ResetCategoryFormValue,OnChangeCategoryInput} from \"../redux/state-slice/category-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function CategoryListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CategoriesList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetCategoryList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetCategoryListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetCategoryList([]))\r\n                store.dispatch(SetCategoryListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\nexport async function CreateCategoryRequest(PostBody,ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CreateCategories\"\r\n        if(ObjectID!==0){\r\n            URL = BaseURL+\"/UpdateCategories/\"+ObjectID;\r\n        }\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            store.dispatch(ResetCategoryFormValue())\r\n            return  true;\r\n        }\r\n        else if(result.status === 200 && result.data['status'] === \"fail\") {\r\n            if(result.data['data']['keyPattern']['Name']===1){\r\n                ErrorToast(\"Category Already Exist\")\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport async function FillCategoryFormRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CategoriesDetailsByID/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            let FormValue=result.data['data'][0];\r\n            store.dispatch(OnChangeCategoryInput({Name:\"Name\",Value:FormValue['Name']}));\r\n            return  true;\r\n        } else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function DeleteCategoryRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/DeleteCategories/\"+ObjectID;\r\n        let result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"associate\") {\r\n            ErrorToast(result.data['data'])\r\n            return  false;\r\n        }\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\nimport store from \"../../redux/store/store\";\nimport {useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport {CreateCategoryRequest, FillCategoryFormRequest} from \"../../APIRequest/CategoryAPIRequest\";\nimport {OnChangeCategoryInput} from \"../../redux/state-slice/category-slice\";\n\nconst CategoryCreateUpdate = () => {\n\n\n    let FormValue=useSelector((state)=>(state.category.FormValue));\n    let navigate=useNavigate();\n    let [ObjectID,SetObjectID]=useState(0);\n\n    useEffect(()=>{\n        let params= new URLSearchParams(window.location.search);\n        let id=params.get('id');\n        if(id!==null){\n            SetObjectID(id);\n            (async () => {\n                await FillCategoryFormRequest(id);\n            })();\n        }\n    },[])\n\n\n    const SaveChange = async () => {\n        if(IsEmpty(FormValue.Name)){\n            ErrorToast(\"Category Name Required !\")\n        }\n        else {\n            if(await CreateCategoryRequest(FormValue,ObjectID)){\n                navigate(\"/CategoryListPage\")\n            }\n        }\n    }\n\n\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Save Category</h5>\n                                <hr className=\"bg-light\"/>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Category Name</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeCategoryInput({Name:\"Name\",Value:e.target.value}))}} value={FormValue.Name} className=\"form-control form-control-sm\" type=\"text\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={SaveChange} className=\"btn btn-sm my-3 btn-success\">Save Change</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CategoryCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport CategoryCreateUpdate from \"../../components/Category/CategoryCreateUpdate\";\n\nconst CategoryCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <CategoryCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default CategoryCreateUpdatePage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {CategoryListRequest, DeleteCategoryRequest} from \"../../APIRequest/CategoryAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport moment from \"moment/moment\";\nimport {DeleteAlert} from \"../../helper/DeleteAlert\";\n\nconst CategoryList = () => {\n\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await CategoryListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n\n    let DataList=useSelector((state)=>(state.category.List));\n    let Total=useSelector((state)=>(state.category.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await CategoryListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n    const searchData=async () => {\n        await CategoryListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await CategoryListRequest(1, e.target.value, searchKeyword)\n    }\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await CategoryListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n\n\n    const DeleteItem = async (id) => {\n        let Result = await DeleteAlert();\n        if(Result.isConfirmed){\n            let DeleteResult= await DeleteCategoryRequest(id)\n            if(DeleteResult){\n                await CategoryListRequest(1,perPage,searchKeyword);\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Category List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">#No</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Name</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Created</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {\n                                                            DataList.map((item,i)=>\n                                                                <tr>\n                                                                    <td><p className=\"text-xs text-start\">{i+1}</p></td>\n                                                                    <td><p className=\"text-xs text-start\">{item.Name}</p></td>\n                                                                    <td><p className=\"text-xs text-start\">{moment(item.CreatedDate).format('MMMM Do YYYY')}</p></td>\n                                                                    <td>\n                                                                        <Link to={`/CategoryCreateUpdatePage?id=${item._id}`} className=\"btn text-info btn-outline-light p-2 mb-0 btn-sm\">\n                                                                            <AiOutlineEdit size={15} />\n                                                                        </Link>\n                                                                        <button onClick={DeleteItem.bind(this,item._id)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\">\n                                                                            <AiOutlineDelete size={15} />\n                                                                        </button>\n                                                                    </td>\n                                                                </tr>\n                                                            )\n                                                        }\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default CategoryList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport CategoryList from \"../../components/Category/CategoryList\";\n\nconst CategoryListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                        <CategoryList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default CategoryListPage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {OnChangeCustomerInput, ResetFormValue, SetCustomerList, SetCustomerListTotal} from \"../redux/state-slice/customer-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function CustomerListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CustomersList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetCustomerList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetCustomerListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetCustomerList([]))\r\n                store.dispatch(SetCustomerListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\nexport async function CreateCustomerRequest(PostBody,ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CreateCustomers\"\r\n        if(ObjectID!==0){\r\n            URL = BaseURL+\"/UpdateCustomers/\"+ObjectID;\r\n        }\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            store.dispatch(ResetFormValue())\r\n            return  true;\r\n        }\r\n        else if(result.status === 200 && result.data['status'] === \"fail\") {\r\n            if(result.data['data']['keyPattern']['Phone']===1){\r\n                ErrorToast(\"Mobile Number Already Exist\")\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\nexport async function FillCustomerFormRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CustomersDetailsByID/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            let FormValue=result.data['data'][0];\r\n            store.dispatch(OnChangeCustomerInput({Name:\"CustomerName\",Value:FormValue['CustomerName']}));\r\n            store.dispatch(OnChangeCustomerInput({Name:\"Phone\",Value:FormValue['Phone']}));\r\n            store.dispatch(OnChangeCustomerInput({Name:\"Email\",Value:FormValue['Email']}));\r\n            store.dispatch(OnChangeCustomerInput({Name:\"Address\",Value:FormValue['Address']}));\r\n            return  true;\r\n        } else {\r\n            debugger;\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        debugger;\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\nexport async function DeleteCustomerRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/DeleteCustomer/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"associate\") {\r\n            ErrorToast(result.data['data'])\r\n            return  false;\r\n        }\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\n","import React, {Fragment, useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport store from \"../../redux/store/store\";\nimport {OnChangeCustomerInput} from \"../../redux/state-slice/customer-slice\";\nimport {CreateCustomerRequest, FillCustomerFormRequest} from \"../../APIRequest/CustomerAPIRequest\";\nimport {ErrorToast, IsEmail, IsEmpty} from \"../../helper/FormHelper\";\nimport {useNavigate} from \"react-router-dom\";\nconst CustomerCreateUpdate = () => {\n\n    let FormValue=useSelector((state)=>(state.customer.FormValue));\n    let navigate=useNavigate();\n    let [ObjectID,SetObjectID]=useState(0);\n\n    useEffect(()=>{\n        let params= new URLSearchParams(window.location.search);\n        let id=params.get('id');\n        if(id!==null){\n            SetObjectID(id);\n            (async () => {\n                await FillCustomerFormRequest(id);\n            })();\n        }\n    },[])\n\n\n\n    const SaveChange = async () => {\n        if(IsEmpty(FormValue.CustomerName)){\n            ErrorToast(\"Customer Name Required !\")\n        }\n        else if(IsEmpty(FormValue.Phone)){\n            ErrorToast(\"Customer Phone  Number Required !\")\n        }\n        else if(IsEmail(FormValue.Email)){\n            ErrorToast(\"Valid Email Address Required !\")\n        }\n        else {\n            if(await CreateCustomerRequest(FormValue,ObjectID)){\n                navigate(\"/CustomerListPage\")\n            }\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <h5 >Save Customer</h5>\n                                    <hr className=\"bg-light\"/>\n\n                                    <div className=\"col-4 p-2\">\n                                        <label className=\"form-label\">Customer Name</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeCustomerInput({Name:\"CustomerName\",Value:e.target.value}))}} value={FormValue.CustomerName} className=\"form-control form-control-sm\" type=\"text\"/>\n                                    </div>\n                                    <div className=\"col-4 p-2\">\n                                        <label className=\"form-label\">Mobile No</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeCustomerInput({Name:\"Phone\",Value:e.target.value}))}} value={FormValue.Phone} className=\"form-control form-control-sm\" type=\"text\"/>\n                                    </div>\n                                    <div className=\"col-4 p-2\">\n                                        <label className=\"form-label\">Email </label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeCustomerInput({Name:\"Email\",Value:e.target.value}))}} value={FormValue.Email} className=\"form-control form-control-sm\" type=\"text\"/>\n                                    </div>\n                                    <div className=\"col-12 p-2\">\n                                        <label className=\"form-label\">Address</label>\n                                        <textarea onChange={(e)=>{store.dispatch(OnChangeCustomerInput({Name:\"Address\",Value:e.target.value}))}} value={FormValue.Address}  className=\"form-control form-control-sm\" rows={4}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4 p-2\">\n                                        <button onClick={SaveChange} className=\"btn btn-sm my-3 btn-success\">Save Change</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default CustomerCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport CustomerCreateUpdate from \"../../components/Customer/CustomerCreateUpdate\";\n\nconst CustomerCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <CustomerCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default CustomerCreateUpdatePage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {CustomerListRequest, DeleteCustomerRequest} from \"../../APIRequest/CustomerAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport {DeleteAlert} from \"../../helper/DeleteAlert\";\n\n\nconst CustomerList = () => {\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await CustomerListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.customer.List));\n    let Total=useSelector((state)=>(state.customer.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await CustomerListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n    const searchData=async () => {\n        await CustomerListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await CustomerListRequest(1, e.target.value, searchKeyword)\n    }\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await CustomerListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n\n    const DeleteItem = async (id) => {\n        let Result = await DeleteAlert();\n        if(Result.isConfirmed){\n           let DeleteResult= await DeleteCustomerRequest(id)\n            if(DeleteResult){\n                await CustomerListRequest(1,perPage,searchKeyword);\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Customer List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">No</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Name</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Phone</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Email</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item,i)=>\n                                                            <tr>\n                                                                <td><p className=\"text-xs text-start\">{i+1}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.CustomerName}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Phone}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Email}</p></td>\n\n                                                                <td>\n                                                                    <Link to={`/CustomerCreateUpdatePage?id=${item._id}`} className=\"btn text-info btn-outline-light p-2 mb-0 btn-sm\">\n                                                                        <AiOutlineEdit size={15} />\n                                                                    </Link>\n                                                                    <button onClick={DeleteItem.bind(this,item._id)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineDelete size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default CustomerList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport CustomerList from \"../../components/Customer/CustomerList\";\nconst CustomerListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <CustomerList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default CustomerListPage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {OnChangeExpenseTypeInput, ResetExpenseTypeFormValue, SetExpenseTypeList, SetExpenseTypeListTotal} from \"../redux/state-slice/expensetype-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\n\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function ExpenseTypeListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/ExpenseTypesList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetExpenseTypeList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetExpenseTypeListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetExpenseTypeList([]))\r\n                store.dispatch(SetExpenseTypeListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\nexport async function CreateExpenseTypeRequest(PostBody,ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CreateExpenseTypes\"\r\n        if(ObjectID!==0){\r\n            URL = BaseURL+\"/UpdateExpenseTypes/\"+ObjectID;\r\n        }\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            store.dispatch(ResetExpenseTypeFormValue())\r\n            return  true;\r\n        }\r\n        else if(result.status === 200 && result.data['status'] === \"fail\") {\r\n            if(result.data['data']['keyPattern']['Name']===1){\r\n                ErrorToast(\"Expense Type Name Already Exist\")\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\nexport async function FillExpenseTypeFormRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/ExpenseTypesDetailsByID/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            let FormValue=result.data['data'][0];\r\n            store.dispatch(OnChangeExpenseTypeInput({Name:\"Name\",Value:FormValue['Name']}));\r\n            return  true;\r\n        } else {\r\n            debugger;\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        debugger;\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\nexport async function DeleteExpenseTypeRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/DeleteExpenseTypes/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"associate\") {\r\n            ErrorToast(result.data['data'])\r\n            return  false;\r\n        }\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {CreateExpenseTypeRequest, FillExpenseTypeFormRequest} from \"../../APIRequest/ExpenseTypeAPIRequest\";\nimport {ErrorToast,IsEmpty} from \"../../helper/FormHelper\";\nimport store from \"../../redux/store/store\";\nimport {OnChangeExpenseTypeInput} from \"../../redux/state-slice/expensetype-slice\";\n\nconst ExpenseTypeCreateUpdate = () => {\n\n    let FormValue=useSelector((state)=>(state.expensetype.FormValue));\n    let navigate=useNavigate();\n    let [ObjectID,SetObjectID]=useState(0);\n\n    useEffect(()=>{\n        let params= new URLSearchParams(window.location.search);\n        let id=params.get('id');\n        if(id!==null){\n            SetObjectID(id);\n            (async () => {\n                await FillExpenseTypeFormRequest(id);\n            })();\n        }\n    },[])\n\n\n\n    const SaveChange = async () => {\n        if(IsEmpty(FormValue.Name)){\n            ErrorToast(\"Expense Type Name Required !\")\n        }\n        else {\n            if(await CreateExpenseTypeRequest(FormValue,ObjectID)){\n                navigate(\"/ExpenseTypeListPage\")\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Save Expense Type</h5>\n                                <hr className=\"bg-light\"/>\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Expense Type Name</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeExpenseTypeInput({Name:\"Name\",Value:e.target.value}))}} value={FormValue.Name} className=\"form-control form-control-sm\" type=\"text\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={SaveChange} className=\"btn btn-sm my-3 btn-success\">Save Change</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseTypeCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ExpenseTypeCreateUpdate from \"../../components/ExpenseType/ExpenseTypeCreateUpdate\";\n\nconst ExpenseTypeCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ExpenseTypeCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ExpenseTypeCreateUpdatePage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {\r\n    OnChangeExpenseInput,\r\n    ResetExpenseFormValue,\r\n    SetExpenseList,\r\n    SetExpenseListTotal,\r\n    SetExpenseTypeDropDown\r\n} from \"../redux/state-slice/expense-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function ExpenseListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/ExpensesList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetExpenseList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetExpenseListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetExpenseList([]))\r\n                store.dispatch(SetExpenseListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function ExpenseTypeDropDownRequest() {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/ExpenseTypesDropDown\";\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'].length > 0) {\r\n                store.dispatch(SetExpenseTypeDropDown(result.data['data']))\r\n            } else {\r\n                store.dispatch(SetExpenseTypeDropDown([]))\r\n                ErrorToast(\"No Expense Type Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\nexport async function CreateExpenseRequest(PostBody,ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CreateExpenses\"\r\n        if(ObjectID!==0){\r\n            URL = BaseURL+\"/UpdateExpenses/\"+ObjectID;\r\n        }\r\n        debugger;\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            store.dispatch(ResetExpenseFormValue())\r\n            return  true;\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function FillExpenseFormRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/ExpenseDetailsByID/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            let FormValue=result.data['data'][0];\r\n            store.dispatch(OnChangeExpenseInput({Name:\"TypeID\",Value:FormValue['TypeID']}));\r\n            store.dispatch(OnChangeExpenseInput({Name:\"Amount\",Value:FormValue['Amount']}));\r\n            store.dispatch(OnChangeExpenseInput({Name:\"Note\",Value:FormValue['Note']}));\r\n            return  true;\r\n        } else {\r\n            debugger;\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        debugger;\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function DeleteExpenseRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/DeleteExpense/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader());\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n","import React, {Fragment, useEffect, useState} from 'react';\nimport {DeleteExpenseRequest, ExpenseListRequest} from \"../../APIRequest/ExpenseAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport CurrencyFormat from \"react-currency-format\";\nimport {DeleteAlert} from \"../../helper/DeleteAlert\";\nimport {BrandListRequest, DeleteBrandRequest} from \"../../APIRequest/BrandAPIRequest\";\n\nconst ExpenseList = () => {\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await ExpenseListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.expense.List));\n    let Total=useSelector((state)=>(state.expense.ListTotal))\n\n    const handlePageClick = async (event) => {\n        debugger;\n        await ExpenseListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n\n\n    const searchData=async () => {\n        await ExpenseListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await ExpenseListRequest(1, e.target.value, searchKeyword)\n    }\n\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await ExpenseListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n\n\n    const DeleteItem = async (id) => {\n        let Result = await DeleteAlert();\n        if(Result.isConfirmed){\n            let DeleteResult= await DeleteExpenseRequest(id)\n            if(DeleteResult){\n                await ExpenseListRequest(1,perPage,searchKeyword);\n            }\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Expense List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">#No</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Type</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Amount</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Note</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item,i)=>\n                                                            <tr>\n                                                                <td><p className=\"text-xs text-start\">{i+1}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Type[0]?item.Type[0]['Name']:\"\"}</p></td>\n                                                                <td><p className=\"text-xs text-start\">\n                                                                    <CurrencyFormat value={item.Amount} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                </p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Note}</p></td>\n                                                                <td>\n                                                                    <Link to={`/ExpenseCreateUpdatePage?id=${item._id}`} className=\"btn text-info btn-outline-light p-2 mb-0 btn-sm\">\n                                                                        <AiOutlineEdit size={15} />\n                                                                    </Link>\n                                                                    <button onClick={DeleteItem.bind(this,item._id)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineDelete size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ExpenseList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ExpenseList from \"../../components/Expense/ExpenseList\";\n\nconst ExpenseListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                        <ExpenseList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ExpenseListPage;","import React, {useEffect, useState} from 'react';\nimport {CreateExpenseRequest, ExpenseTypeDropDownRequest, FillExpenseFormRequest} from \"../../APIRequest/ExpenseAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport store from \"../../redux/store/store\";\nimport {OnChangeExpenseInput} from \"../../redux/state-slice/expense-slice\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst ExpenseCreateUpdate = () => {\n    let FormValue=useSelector((state)=>(state.expense.FormValue));\n    let navigate=useNavigate();\n    let [ObjectID,SetObjectID]=useState(0);\n\n\n    useEffect(()=>{\n        (async () => {\n            await ExpenseTypeDropDownRequest();\n        })();\n\n        let params= new URLSearchParams(window.location.search);\n        let id=params.get('id');\n        if(id!==null){\n            SetObjectID(id);\n            (async () => {\n               await FillExpenseFormRequest(id)\n            })();\n        }\n\n    },[])\n\n\n\n    let ExpenseTypeDropDown=useSelector((state)=>(state.expense.ExpenseTypeDropDown));\n\n\n    const SaveChange = async () => {\n        if(IsEmpty(FormValue.TypeID)){\n            ErrorToast(\"Expense Type Required !\")\n        }\n        else if(FormValue.Amount===0){\n            ErrorToast(\"Expense Amount Required !\")\n        }\n        else {\n            if(await CreateExpenseRequest(FormValue,ObjectID)){\n                navigate(\"/ExpenseListPage\")\n            }\n        }\n    }\n\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5>Save Expense</h5>\n                                <hr className=\"bg-light\"/>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Expense Type</label>\n                                    <select onChange={(e)=>{store.dispatch(OnChangeExpenseInput({Name:\"TypeID\",Value:e.target.value}))}} value={FormValue.TypeID} className=\"form-select form-select-sm\">\n                                        <option value=\"\">Select Type</option>\n                                        {\n                                            ExpenseTypeDropDown.map((item,i)=>{\n                                                return( <option key={i.toLocaleString()} value={item._id}>{item.Name}</option>)\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Expense Amount</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeExpenseInput({Name:\"Amount\",Value:e.target.value}))}} value={FormValue.Amount} className=\"form-control form-control-sm\" type=\"number\"/>\n                                </div>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Expense Note</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeExpenseInput({Name:\"Note\",Value:e.target.value}))}} value={FormValue.Note} className=\"form-control form-control-sm\" type=\"text\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={SaveChange}  className=\"btn btn-sm my-3 btn-success\">Save Change</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ExpenseCreateUpdate from \"../../components/Expense/ExpenseCreateUpdate\";\n\nconst ExpenseCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ExpenseCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ExpenseCreateUpdatePage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {\r\n    OnChangeProductInput,\r\n    ResetProductFormValue,\r\n    SetProductBrandDropDown,\r\n    SetProductCategoryDropDown,\r\n    SetProductList,\r\n    SetProductListTotal\r\n} from \"../redux/state-slice/product-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nimport {OnChangeExpenseInput} from \"../redux/state-slice/expense-slice\";\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function ProductListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/ProductsList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetProductList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetProductListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetProductList([]))\r\n                store.dispatch(SetProductListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function CreateProductRequest(PostBody,ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CreateProducts\"\r\n        if(ObjectID!==0){\r\n            URL = BaseURL+\"/UpdateProducts/\"+ObjectID;\r\n        }\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            store.dispatch(ResetProductFormValue())\r\n            return  true;\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\nexport async function FillProductFormRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/ProductsDetailsByID/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            let FormValue=result.data['data'][0];\r\n            store.dispatch(OnChangeProductInput({Name:\"CategoryID\",Value:FormValue['CategoryID']}));\r\n            store.dispatch(OnChangeProductInput({Name:\"BrandID\",Value:FormValue['BrandID']}));\r\n            store.dispatch(OnChangeProductInput({Name:\"Name\",Value:FormValue['Name']}));\r\n            store.dispatch(OnChangeProductInput({Name:\"Unit\",Value:FormValue['Unit']}));\r\n            store.dispatch(OnChangeProductInput({Name:\"Details\",Value:FormValue['Details']}));\r\n            return  true;\r\n        } else {\r\n            debugger;\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        debugger;\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\nexport async function ProductCategoryDropDownRequest() {\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL+\"/CategoriesDropDown\";\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'].length > 0) {\r\n                store.dispatch(SetProductCategoryDropDown(result.data['data']))\r\n            } else {\r\n                store.dispatch(SetProductCategoryDropDown([]));\r\n                ErrorToast(\"No Product Category Found\");\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function ProductBrandDropDownRequest() {\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL+\"/BrandDropDown\";\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'].length > 0) {\r\n                store.dispatch(SetProductBrandDropDown(result.data['data']))\r\n            } else {\r\n                store.dispatch(SetProductBrandDropDown([]));\r\n                ErrorToast(\"No Product Brand Found\");\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function DeleteProductRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/DeleteProduct/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader());\r\n        if (result.status === 200 && result.data['status'] === \"associate\") {\r\n            ErrorToast(result.data['data'])\r\n            return  false;\r\n        }\r\n        else if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\nimport store from \"../../redux/store/store\";\nimport {\n    CreateProductRequest,\n    FillProductFormRequest,\n    ProductBrandDropDownRequest,\n    ProductCategoryDropDownRequest\n} from \"../../APIRequest/ProductAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {OnChangeProductInput} from \"../../redux/state-slice/product-slice\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\n\nconst ProductCreateUpdate = () => {\n\n    let FormValue=useSelector((state)=>(state.product.FormValue));\n    let navigate=useNavigate();\n    let [ObjectID,SetObjectID]=useState(0);\n\n    useEffect(()=>{\n        (async () => {\n            await ProductBrandDropDownRequest();\n            await ProductCategoryDropDownRequest();\n        })();\n\n        let params= new URLSearchParams(window.location.search);\n        let id=params.get('id');\n        if(id!==null){\n            SetObjectID(id);\n            (async () => {\n                await FillProductFormRequest(id)\n            })();\n        }\n\n    },[])\n\n\n    let ProductBrandDropDown=useSelector((state)=>(state.product.ProductBrandDropDown));\n    let ProductCategoryDropDown=useSelector((state)=>(state.product.ProductCategoryDropDown));\n\n\n    const SaveChange = async () => {\n        if(IsEmpty(FormValue.Name)){\n            ErrorToast(\"Product Name Required !\")\n        }\n        else if(IsEmpty(FormValue.BrandID)){\n            ErrorToast(\"Product Brand Required !\")\n        }\n        else if(IsEmpty(FormValue.CategoryID)){\n            ErrorToast(\"Product Category Required !\")\n        }\n        else if(IsEmpty(FormValue.Unit)){\n            ErrorToast(\"Product Unit Required !\")\n        }\n\n        else {\n            if(await CreateProductRequest(FormValue,ObjectID)){\n                navigate(\"/ProductListPage\")\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Save Product Type</h5>\n                                <hr className=\"bg-light\"/>\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Product Name</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeProductInput({Name:\"Name\",Value:e.target.value}))}} value={FormValue.Name} className=\"form-control form-control-sm\" type=\"text\"/>\n                                </div>\n\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Product Brand</label>\n                                    <select onChange={(e)=>{store.dispatch(OnChangeProductInput({Name:\"BrandID\",Value:e.target.value}))}} value={FormValue.BrandID} className=\"form-select form-select-sm\">\n                                        <option value=\"\">Select Type</option>\n                                        {\n                                            ProductBrandDropDown.map((item,i)=>{\n                                                return( <option key={i.toLocaleString()} value={item._id}>{item.Name}</option>)\n                                            })\n                                        }\n                                    </select>\n                                </div>\n\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Product Category</label>\n                                    <select onChange={(e)=>{store.dispatch(OnChangeProductInput({Name:\"CategoryID\",Value:e.target.value}))}} value={FormValue.CategoryID} className=\"form-select form-select-sm\">\n                                        <option value=\"\">Select Type</option>\n                                        {\n                                            ProductCategoryDropDown.map((item,i)=>{\n                                                return( <option key={i.toLocaleString()} value={item._id}>{item.Name}</option>)\n                                            })\n                                        }\n                                    </select>\n                                </div>\n\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Unit</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeProductInput({Name:\"Unit\",Value:e.target.value}))}} value={FormValue.Unit} className=\"form-control form-control-sm\" type=\"text\"/>\n                                </div>\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Details</label>\n                                    <input onChange={(e)=>{store.dispatch(OnChangeProductInput({Name:\"Details\",Value:e.target.value}))}} value={FormValue.Details} className=\"form-control form-control-sm\" type=\"text\"/>\n                                </div>\n\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={SaveChange} className=\"btn btn-sm my-3 btn-success\">Save Change</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ProductCreateUpdate from \"../../components/Product/ProductCreateUpdate\";\n\nconst ProductCreateUpdatePage = () => {\n\n\n\n\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ProductCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ProductCreateUpdatePage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {DeleteProductRequest, ProductListRequest} from \"../../APIRequest/ProductAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/all\";\nimport {DeleteAlert} from \"../../helper/DeleteAlert\";\nimport ReactPaginate from \"react-paginate\";\n\n\nconst ProductList = () => {\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await ProductListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.product.List));\n    let Total=useSelector((state)=>(state.product.ListTotal))\n\n\n\n    const handlePageClick = async (event) => {\n        await ProductListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n\n\n    const searchData=async () => {\n        await ProductListRequest(1, perPage, searchKeyword)\n    }\n\n\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await ProductListRequest(1, e.target.value, searchKeyword)\n    }\n\n\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await ProductListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n\n    const DeleteItem = async (id) => {\n        let Result = await DeleteAlert();\n        if(Result.isConfirmed){\n            let DeleteResult= await DeleteProductRequest(id)\n            if(DeleteResult){\n                await ProductListRequest(1,perPage,searchKeyword);\n            }\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5> Product List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Name</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Unit</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Brand</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Categories</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Details</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item)=>\n                                                            <tr>\n                                                                <td><p className=\"text-xs text-start\">{item.Name}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Unit}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.brands[0]?item.brands[0]['Name']:\"\"}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.categories[0]?item.categories[0]['Name']:\"\"}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Details}</p></td>\n                                                                <td>\n                                                                    <Link to={`/ProductCreateUpdatePage?id=${item._id}`} className=\"btn text-info btn-outline-light p-2 mb-0 btn-sm\">\n                                                                        <AiOutlineEdit size={15} />\n                                                                    </Link>\n                                                                    <button onClick={DeleteItem.bind(this,item._id)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineDelete size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ProductList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ProductList from \"../../components/Product/ProductList\";\nconst ProductListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ProductList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\nexport default ProductListPage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {SetPurchaseList, SetPurchaseListTotal, SetSupplierDropDown} from \"../redux/state-slice/purchase-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nimport {SetProductDropDown} from \"../redux/state-slice/purchase-slice\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function PurchaseListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/PurchasesList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetPurchaseList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetPurchaseListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetPurchaseList([]))\r\n                store.dispatch(SetPurchaseListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\nexport async function ProductDropDownRequest() {\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL+\"/ProductsDropDown\";\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'].length > 0) {\r\n                store.dispatch(SetProductDropDown(result.data['data']))\r\n            } else {\r\n                store.dispatch(SetProductDropDown([]));\r\n                ErrorToast(\"No Product Found\");\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\nexport async function SupplierDropDownRequest() {\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL+\"/SuppliersDropDown\";\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'].length > 0) {\r\n                store.dispatch(SetSupplierDropDown(result.data['data']))\r\n            } else {\r\n                store.dispatch(SetSupplierDropDown([]));\r\n                ErrorToast(\"No Supplier Found\");\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\nexport async function CreatePurchaseRequest(ParentBody,ChildsBody) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let PostBody={\"Parent\":ParentBody, \"Childs\":ChildsBody}\r\n        let URL = BaseURL+\"/CreatePurchases\"\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true;\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}","import React, {Fragment, useEffect, useRef} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {BsCartCheck, BsTrash} from \"react-icons/all\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport store from \"../../redux/store/store\";\nimport {OnChangePurchaseInput, RemovePurchaseItem, SetPurchaseItemList} from \"../../redux/state-slice/purchase-slice\";\nimport {CreatePurchaseRequest, ProductDropDownRequest, SupplierDropDownRequest} from \"../../APIRequest/PurchaseAPIRequest\";\n\n\nconst PurchaseCreateUpdate = () => {\n\n    let productRef,qtyRef,unitPriceRef=useRef();\n\n    useEffect(()=>{\n        (async () => {\n            await ProductDropDownRequest();\n            await SupplierDropDownRequest();\n        })();\n    },[])\n\n\n    let SupplierDropDown=useSelector((state)=>(state.purchase.SupplierDropDown));\n    let ProductDropDown=useSelector((state)=>(state.purchase.ProductDropDown));\n    let PurchaseItemList=useSelector((state)=>(state.purchase.PurchaseItemList));\n    let PurchaseFormValue=useSelector((state)=>(state.purchase.PurchaseFormValue));\n\n    const OnAddCart = () => {\n        let productValue=productRef.value;\n        let productName=productRef.selectedOptions[0].text;\n        let qtyValue=qtyRef.value;\n        let unitPriceValue=unitPriceRef.value;\n\n        if(IsEmpty(productValue)){\n            ErrorToast(\"Select Product\")\n        }\n        else if(IsEmpty(qtyValue)){\n            ErrorToast(\"Qty Required\")\n        }\n        else if(IsEmpty(unitPriceValue)){\n            ErrorToast(\"Unit Price Required\")\n        }\n        else {\n            let item= {\n                \"ProductID\":productValue,\n                \"ProductName\":productName,\n                \"Qty\":qtyValue,\n                \"UnitCost\":unitPriceValue,\n                \"Total\":(parseInt(qtyValue))*(parseInt(unitPriceValue))\n            }\n            store.dispatch(SetPurchaseItemList(item))\n        }\n\n    }\n\n\n    const removeCart = (i) => {\n        store.dispatch(RemovePurchaseItem(i))\n    }\n\n\n    const CreateNewPurchase=async () => {\n        // Apply Validation\n        let res= await CreatePurchaseRequest(PurchaseFormValue, PurchaseItemList);\n        alert(res);\n    }\n\n\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4 col-lg-4 mb-3\">\n                        <div className=\"card h-100\">\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <h5 >Create Purchase</h5>\n                                    <hr className=\"bg-light\"/>\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Supplier</label>\n                                        <select onChange={(e)=>{store.dispatch(OnChangePurchaseInput({Name:\"SupplierID\",Value:e.target.value}))}} className=\"form-select form-select-sm\">\n                                            <option value=\"\">Select Supplier</option>\n                                            {\n                                                SupplierDropDown.map((item,i)=>{\n                                                    return( <option key={i.toLocaleString()} value={item._id}>{item.Name}</option>)\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Vat/Tax</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangePurchaseInput({Name:\"VatTax\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Discount</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangePurchaseInput({Name:\"Discount\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Other Cost</label>\n                                        <input  onChange={(e)=>{store.dispatch(OnChangePurchaseInput({Name:\"OtherCost\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Shipping Cost</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangePurchaseInput({Name:\"ShippingCost\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Grand Total</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangePurchaseInput({Name:\"GrandTotal\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Note</label>\n                                        <input  onChange={(e)=>{store.dispatch(OnChangePurchaseInput({Name:\"Note\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4 p-2\">\n                                        <button onClick={CreateNewPurchase} className=\"btn btn-sm my-3 btn-success\">Create</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-8 col-lg-8 mb-3\">\n                        <div className=\"card  h-100\">\n                            <div className=\"card-body\">\n\n                                <div className=\"row\">\n                                    <div className=\"col-6  p-1\">\n                                        <label className=\"form-label\">Select Product</label>\n                                        <select ref={(input)=>productRef=input} className=\"form-select form-select-sm\">\n                                            <option value=\"\">Select Product</option>\n                                            {\n                                                ProductDropDown.map((item,i)=>{\n                                                    return( <option key={i.toLocaleString()} value={item._id}>{item.Name}</option>)\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Qty</label>\n                                        <input ref={(input)=>qtyRef=input}  className=\"form-control form-control-sm\" />\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Unit Price</label>\n                                        <input ref={(input)=>unitPriceRef=input} className=\"form-control form-control-sm\" />\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Add to cart</label>\n                                        <button onClick={OnAddCart} className=\"btn w-100 btn-success btn-sm\"><BsCartCheck/></button>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"table-responsive table-section\">\n                                            <table className=\"table-sm text-center table\">\n                                                <thead className=\"sticky-top bg-white\">\n                                                <tr>\n                                                    <th>Name</th>\n                                                    <th>Qty</th>\n                                                    <th>Unit Price</th>\n                                                    <th>Total</th>\n                                                    <th>Remove</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                {\n                                                    PurchaseItemList.map((item,i)=>{\n                                                        return(\n                                                            <tr>\n                                                                <td>{item.ProductName}</td>\n                                                                <td>{item.Qty}</td>\n                                                                <td>{item.UnitCost}</td>\n                                                                <td>{item.Total}</td>\n                                                                <td><button onClick={removeCart.bind(this,i)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\"><BsTrash/></button></td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default PurchaseCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport PurchaseCreateUpdate from \"../../components/Purchase/PurchaseCreateUpdate\";\n\nconst PurchaseCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <PurchaseCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default PurchaseCreateUpdatePage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {PurchaseListRequest} from \"../../APIRequest/PurchaseAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {AiOutlineEye} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport moment from \"moment\";\nimport CurrencyFormat from \"react-currency-format\";\n\nconst PurchaseList = () => {\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await PurchaseListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.purchase.List));\n    let Total=useSelector((state)=>(state.purchase.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await PurchaseListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n    const searchData=async () => {\n        await PurchaseListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await PurchaseListRequest(1, e.target.value, searchKeyword)\n    }\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await PurchaseListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n    const DetailsPopUp = () => {\n\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Purchase List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Supplier</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Grand Total</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Shipping Cost</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Vat/Tax</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Other Cost</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Discount</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Date</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item)=>\n                                                            <tr>\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">{item.suppliers[0]['Name']}</p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.GrandTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.ShippingCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.VatTax} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.OtherCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.Discount} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">{moment(item.CreatedDate).format('MMMM Do YYYY')}</p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <button onClick={DetailsPopUp.bind(this,item)} className=\"btn btn-outline-light text-success p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineEye size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default PurchaseList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport PurchaseList from \"../../components/Purchase/PurchaseList\";\n\nconst PurchaseListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <PurchaseList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default PurchaseListPage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nimport axios from \"axios\";\r\n\r\nimport {ErrorToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\n\r\nimport {SetExpensesByDateList, SetPurchaseByDateList, SetReturnByDateList, SetSalesByDateList} from \"../redux/state-slice/report-slice\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function ExpensesByDateRequest(FormData,ToDate) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let PostBody={\"FormDate\":FormData+\"T00:00:00.000+00:00\",\"ToDate\":ToDate+\"T00:00:00.000+00:00\"}\r\n        let URL = BaseURL+\"/ExpensesByDate\";\r\n        const result = await axios.post(URL,PostBody,AxiosHeader);\r\n        store.dispatch(HideLoader());\r\n        if (result.status === 200 && result.data['status']===\"success\") {\r\n            store.dispatch(SetExpensesByDateList(result.data['data']))\r\n\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\nexport async function SalesByDateRequest(FormData,ToDate) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let PostBody={\"FormDate\":FormData+\"T00:00:00.000+00:00\",\"ToDate\":ToDate+\"T00:00:00.000+00:00\"}\r\n        let URL = BaseURL+\"/SalesByDate\";\r\n        const result = await axios.post(URL,PostBody,AxiosHeader);\r\n        store.dispatch(HideLoader());\r\n        if (result.status === 200 && result.data['status']===\"success\") {\r\n            store.dispatch(SetSalesByDateList(result.data['data']))\r\n\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\nexport async function PurchaseByDateRequest(FormData,ToDate) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let PostBody={\"FormDate\":FormData+\"T00:00:00.000+00:00\",\"ToDate\":ToDate+\"T00:00:00.000+00:00\"}\r\n        let URL = BaseURL+\"/PurchaseByDate\";\r\n        const result = await axios.post(URL,PostBody,AxiosHeader);\r\n        store.dispatch(HideLoader());\r\n        if (result.status === 200 && result.data['status']===\"success\") {\r\n            store.dispatch(SetPurchaseByDateList(result.data['data']))\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\nexport async function ReturnByDateRequest(FormData,ToDate) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let PostBody={\"FormDate\":FormData+\"T00:00:00.000+00:00\",\"ToDate\":ToDate+\"T00:00:00.000+00:00\"}\r\n        let URL = BaseURL+\"/ReturnByDate\";\r\n        const result = await axios.post(URL,PostBody,AxiosHeader);\r\n        store.dispatch(HideLoader());\r\n        if (result.status === 200 && result.data['status']===\"success\") {\r\n            store.dispatch(SetReturnByDateList(result.data['data']))\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}","import React, {useRef} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport {PurchaseByDateRequest} from \"../../APIRequest/ReportAPIRequest\";\nimport moment from \"moment/moment\";\nimport exportFromJSON from \"export-from-json\";\nimport CurrencyFormat from \"react-currency-format\";\n\nconst PurchaseReport = () => {\n\n    let formRef,toRef=useRef();\n    let DataList=useSelector((state)=>(state.report.PurchaseByDateList));\n\n    const CreateReport = async () => {\n        let formRefValue = formRef.value;\n        let toRefValue = toRef.value;\n        if (IsEmpty(formRefValue)) {\n            ErrorToast(\"Form Date Required\")\n        } else if (IsEmpty(toRefValue)) {\n            ErrorToast(\"To Date Required\")\n        } else {\n            await PurchaseByDateRequest(formRefValue,toRefValue);\n        }\n    }\n\n    const OnExport = (exportType,data) => {\n        const fileName = 'PurchaseReport'\n        if(data.length>0){\n            let ReportData=[]\n            data.map((item)=>{\n                let listItem={\n                    \"Product\":item['products']['Name'], Unit:item['products']['Unit'],\n                    \"Details\":item['products']['Details'],\n                    \"Brand\":item['brands'][0]['Name'],\n                    \"Category\":item['categories'][0]['Name'],\n                    \"UnitCost\":item['UnitCost'],\n                    \"Total\":item['Total'],\n                    \"Date\":moment(item['CreatedDate']).format('MMMM Do YYYY')\n                }\n                ReportData.push(listItem)\n            })\n            exportFromJSON({data: ReportData, fileName: fileName, exportType: exportType })\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n\n                <div className=\"col-12 mb-3\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Purchase Report by Date</h5>\n                                <hr className=\"bg-light\"/>\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date Form:</label>\n                                    <input  ref={(input)=>formRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date To:</label>\n                                    <input  ref={(input)=>toRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={CreateReport} className=\"btn btn-sm my-3 btn-success\">Create</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    DataList.length>0?(\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h6>Total: {DataList[0]['Total'].length>0?<CurrencyFormat value={DataList[0]['Total'][0]['TotalAmount']} displayType={'text'} thousandSeparator={true} prefix={'$ '} />:0} </h6>\n                                            <button onClick={OnExport.bind(this,'csv',DataList[0]['Rows'])}  className=\"btn btn-sm my-2 btn-success\">Download CSV</button>\n                                            <button onClick={OnExport.bind(this,'xls',DataList[0]['Rows'])}   className=\"btn btn-sm my-2 ms-2 btn-success\">Download XLS</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ):(\n                        <div></div>\n                    )\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default PurchaseReport;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport PurchaseReport from \"../../components/Report/PurchaseReport\";\n\nconst PurchaseReportPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <PurchaseReport/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default PurchaseReportPage;","import React, {useRef} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport {ReturnByDateRequest} from \"../../APIRequest/ReportAPIRequest\";\nimport moment from \"moment\";\nimport exportFromJSON from \"export-from-json\";\nimport CurrencyFormat from \"react-currency-format\";\n\nconst ReturnReport = () => {\n\n    let formRef,toRef=useRef();\n\n    let DataList=useSelector((state)=>(state.report.ReturnByDateList));\n\n    const CreateReport = async () => {\n        let formRefValue = formRef.value;\n        let toRefValue = toRef.value;\n        if (IsEmpty(formRefValue)) {\n            ErrorToast(\"Form Date Required\")\n        } else if (IsEmpty(toRefValue)) {\n            ErrorToast(\"To Date Required\")\n        } else {\n            await ReturnByDateRequest(formRefValue,toRefValue);\n        }\n    }\n\n    const OnExport = (exportType,data) => {\n        const fileName = 'ReturnReport'\n        if(data.length>0){\n            let ReportData=[]\n            data.map((item)=>{\n                let listItem={\n                    \"Product\":item['products']['Name'], Unit:item['products']['Unit'],\n                    \"Details\":item['products']['Details'],\n                    \"Brand\":item['brands'][0]['Name'],\n                    \"Category\":item['categories'][0]['Name'],\n                    \"UnitCost\":item['UnitCost'],\n                    \"Total\":item['Total'],\n                    \"Date\":moment(item['CreatedDate']).format('MMMM Do YYYY')\n                }\n                ReportData.push(listItem)\n            })\n            exportFromJSON({data: ReportData, fileName: fileName, exportType: exportType })\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n\n                <div className=\"col-12 mb-3\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Return Report by Date</h5>\n                                <hr className=\"bg-light\"/>\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date Form:</label>\n                                    <input  ref={(input)=>formRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date To:</label>\n                                    <input  ref={(input)=>toRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={CreateReport} className=\"btn btn-sm my-3 btn-success\">Create</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    DataList.length>0?(\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h6>Total: {DataList[0]['Total'].length>0?<CurrencyFormat value={DataList[0]['Total'][0]['TotalAmount']} displayType={'text'} thousandSeparator={true} prefix={'$ '} />:0} </h6>\n                                            <button onClick={OnExport.bind(this,'csv',DataList[0]['Rows'])}  className=\"btn btn-sm my-2 btn-success\">Download CSV</button>\n                                            <button onClick={OnExport.bind(this,'xls',DataList[0]['Rows'])}   className=\"btn btn-sm my-2 ms-2 btn-success\">Download XLS</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ):(\n                        <div></div>\n                    )\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default ReturnReport;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ReturnReport from \"../../components/Report/ReturnReport\";\n\nconst ReturnReportPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ReturnReport/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ReturnReportPage;","import React, {useRef} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport {SalesByDateRequest} from \"../../APIRequest/ReportAPIRequest\";\nimport exportFromJSON from \"export-from-json\";\nimport moment from \"moment/moment\";\nimport CurrencyFormat from \"react-currency-format\";\n\nconst SaleReport = () => {\n    let formRef,toRef=useRef();\n\n    let DataList=useSelector((state)=>(state.report.SalesByDateList));\n\n    const CreateReport = async () => {\n        let formRefValue = formRef.value;\n        let toRefValue = toRef.value;\n        if (IsEmpty(formRefValue)) {\n            ErrorToast(\"Form Date Required\")\n        } else if (IsEmpty(toRefValue)) {\n            ErrorToast(\"To Date Required\")\n        } else {\n            await SalesByDateRequest(formRefValue,toRefValue);\n        }\n    }\n\n    const OnExport = (exportType,data) => {\n        const fileName = 'SalesReport'\n        if(data.length>0){\n            let ReportData=[]\n            data.map((item)=>{\n                let listItem={\n                    \"Product\":item['products']['Name'], Unit:item['products']['Unit'],\n                    \"Details\":item['products']['Details'],\n                    \"Brand\":item['brands'][0]['Name'],\n                    \"Category\":item['categories'][0]['Name'],\n                    \"UnitCost\":item['UnitCost'],\n                    \"Total\":item['Total'],\n                    \"Date\":moment(item['CreatedDate']).format('MMMM Do YYYY')\n                }\n                ReportData.push(listItem)\n            })\n            exportFromJSON({data: ReportData, fileName: fileName, exportType: exportType })\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n\n                <div className=\"col-12 mb-3\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Sales Report by Date</h5>\n                                <hr className=\"bg-light\"/>\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date Form:</label>\n                                    <input  ref={(input)=>formRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date To:</label>\n                                    <input  ref={(input)=>toRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={CreateReport} className=\"btn btn-sm my-3 btn-success\">Create</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    DataList.length>0?(\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h6>Total: {DataList[0]['Total'].length>0?<CurrencyFormat value={DataList[0]['Total'][0]['TotalAmount']} displayType={'text'} thousandSeparator={true} prefix={'$ '} />:0} </h6>\n                                            <button onClick={OnExport.bind(this,'csv',DataList[0]['Rows'])}  className=\"btn btn-sm my-2 btn-success\">Download CSV</button>\n                                            <button onClick={OnExport.bind(this,'xls',DataList[0]['Rows'])}   className=\"btn btn-sm my-2 ms-2 btn-success\">Download XLS</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ):(\n                        <div></div>\n                    )\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default SaleReport;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport SaleReport from \"../../components/Report/SaleReport\";\n\nconst SaleReportPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <SaleReport/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default SaleReportPage;","import React, {useRef} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport {ExpensesByDateRequest} from \"../../APIRequest/ReportAPIRequest\";\nimport moment from \"moment\";\nimport exportFromJSON from \"export-from-json\";\nimport CurrencyFormat from \"react-currency-format\";\n\nconst ExpenseReport = () => {\n\n    let formRef,toRef=useRef();\n    let DataList=useSelector((state)=>(state.report.ExpensesByDateList));\n\n    const CreateReport = async () => {\n        let formRefValue = formRef.value;\n        let toRefValue = toRef.value;\n        if (IsEmpty(formRefValue)) {\n            ErrorToast(\"Form Date Required\")\n        } else if (IsEmpty(toRefValue)) {\n            ErrorToast(\"To Date Required\")\n        } else {\n            await ExpensesByDateRequest(formRefValue,toRefValue);\n        }\n    }\n\n    const OnExport = (exportType,data) => {\n        const fileName = 'ExpenseReport'\n        if(data.length>0){\n            let ReportData=[]\n            data.map((item)=>{\n                let listItem={\n                    \"Amount\":item['Amount'],\n                    \"Note\":item['Note'],\n                    \"Category\":item['Type'][0]['Name'],\n                    \"Date\":moment(item['CreatedDate']).format('MMMM Do YYYY')\n                }\n                ReportData.push(listItem)\n            })\n            exportFromJSON({data: ReportData, fileName: fileName, exportType: exportType })\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n\n                <div className=\"col-12 mb-3\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 >Expense Report by Date</h5>\n                                <hr className=\"bg-light\"/>\n\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date Form:</label>\n                                    <input  ref={(input)=>formRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                                <div className=\"col-4 p-2\">\n                                    <label className=\"form-label\">Date To:</label>\n                                    <input  ref={(input)=>toRef=input} className=\"form-control form-control-sm\" type=\"date\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4 p-2\">\n                                    <button onClick={CreateReport} className=\"btn btn-sm my-3 btn-success\">Create</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    DataList.length>0?(\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n\n                                            <h6>Total: {DataList[0]['Total'].length>0?<CurrencyFormat value={DataList[0]['Total'][0]['TotalAmount']} displayType={'text'} thousandSeparator={true} prefix={'$ '} />:0} </h6>\n                                            <button onClick={OnExport.bind(this,'csv',DataList[0]['Rows'])}  className=\"btn btn-sm my-2 btn-success\">Download CSV</button>\n                                            <button onClick={OnExport.bind(this,'xls',DataList[0]['Rows'])}   className=\"btn btn-sm my-2 ms-2 btn-success\">Download XLS</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ):(\n                        <div></div>\n                    )\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseReport;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ExpenseReport from \"../../components/Report/ExpenseReport\";\n\nconst ExpenseReportPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                        <ExpenseReport/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ExpenseReportPage;","import React, {Fragment, useEffect, useRef} from 'react';\nimport {\n    CreateReturnRequest,\n    CustomerDropDownRequest,\n    ProductDropDownRequest\n} from \"../../APIRequest/ReturnAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {BsCartCheck, BsTrash} from \"react-icons/all\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport store from \"../../redux/store/store\";\nimport {OnChangeReturnInput, RemoveReturnItem, SetReturnItemList} from \"../../redux/state-slice/return-slice\";\n\n\nconst ReturnCreateUpdate = () => {\n\n    let productRef,qtyRef,unitPriceRef=useRef();\n\n    useEffect(()=>{\n        (async () => {\n            await CustomerDropDownRequest();\n            await ProductDropDownRequest();\n        })();\n    },[])\n\n\n    let CustomerDropDown=useSelector((state)=>(state.return.CustomerDropDown));\n    let ProductDropDown=useSelector((state)=>(state.return.ProductDropDown));\n    let ReturnItemList=useSelector((state)=>(state.return.ReturnItemList));\n    let ReturnFormValue=useSelector((state)=>(state.return.ReturnFormValue));\n\n    const OnAddCart = () => {\n        let productValue=productRef.value;\n        let productName=productRef.selectedOptions[0].text;\n        let qtyValue=qtyRef.value;\n        let unitPriceValue=unitPriceRef.value;\n\n        if(IsEmpty(productValue)){\n            ErrorToast(\"Select Product\")\n        }\n        else if(IsEmpty(qtyValue)){\n            ErrorToast(\"Qty Required\")\n        }\n        else if(IsEmpty(unitPriceValue)){\n            ErrorToast(\"Unit Price Required\")\n        }\n        else {\n            let item= {\n                \"ProductID\":productValue,\n                \"ProductName\":productName,\n                \"Qty\":qtyValue,\n                \"UnitCost\":unitPriceValue,\n                \"Total\":(parseInt(qtyValue))*(parseInt(unitPriceValue))\n            }\n            store.dispatch(SetReturnItemList(item))\n        }\n\n    }\n\n\n    const removeCart = (i) => {\n        store.dispatch(RemoveReturnItem(i))\n    }\n\n\n    const CreateNewReturn=async () => {\n        // Apply Validation\n        let res= await CreateReturnRequest(ReturnFormValue, ReturnItemList);\n        alert(res);\n    }\n\n\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4 col-lg-4 mb-3\">\n                        <div className=\"card h-100\">\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <h5 >Create Return</h5>\n                                    <hr className=\"bg-light\"/>\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Customer</label>\n                                        <select onChange={(e)=>{store.dispatch(OnChangeReturnInput({Name:\"CustomerID\",Value:e.target.value}))}} className=\"form-select form-select-sm\">\n                                            <option value=\"\">Select Customer</option>\n                                            {\n                                                CustomerDropDown.map((item,i)=>{\n                                                    return( <option key={i.toLocaleString()} value={item._id}>{item.CustomerName}</option>)\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Vat/Tax</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeReturnInput({Name:\"VatTax\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Discount</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeReturnInput({Name:\"Discount\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Other Cost</label>\n                                        <input  onChange={(e)=>{store.dispatch(OnChangeReturnInput({Name:\"OtherCost\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Shipping Cost</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeReturnInput({Name:\"ShippingCost\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Grand Total</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeReturnInput({Name:\"GrandTotal\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Note</label>\n                                        <input  onChange={(e)=>{store.dispatch(OnChangeReturnInput({Name:\"Note\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4 p-2\">\n                                        <button onClick={CreateNewReturn} className=\"btn btn-sm my-3 btn-success\">Create</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-8 col-lg-8 mb-3\">\n                        <div className=\"card  h-100\">\n                            <div className=\"card-body\">\n\n                                <div className=\"row\">\n                                    <div className=\"col-6  p-1\">\n                                        <label className=\"form-label\">Select Product</label>\n                                        <select ref={(input)=>productRef=input} className=\"form-select form-select-sm\">\n                                            <option value=\"\">Select Product</option>\n                                            {\n                                                ProductDropDown.map((item,i)=>{\n                                                    return( <option key={i.toLocaleString()} value={item._id}>{item.Name}</option>)\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Qty</label>\n                                        <input ref={(input)=>qtyRef=input}  className=\"form-control form-control-sm\" />\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Unit Price</label>\n                                        <input ref={(input)=>unitPriceRef=input} className=\"form-control form-control-sm\" />\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Add to cart</label>\n                                        <button onClick={OnAddCart} className=\"btn w-100 btn-success btn-sm\"><BsCartCheck/></button>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"table-responsive table-section\">\n                                            <table className=\"table-sm text-center table\">\n                                                <thead className=\"sticky-top bg-white\">\n                                                <tr>\n                                                    <th>Name</th>\n                                                    <th>Qty</th>\n                                                    <th>Unit Price</th>\n                                                    <th>Total</th>\n                                                    <th>Remove</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                {\n                                                    ReturnItemList.map((item,i)=>{\n                                                        return(\n                                                            <tr>\n                                                                <td>{item.ProductName}</td>\n                                                                <td>{item.Qty}</td>\n                                                                <td>{item.UnitCost}</td>\n                                                                <td>{item.Total}</td>\n                                                                <td><button onClick={removeCart.bind(this,i)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\"><BsTrash/></button></td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ReturnCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ReturnCreateUpdate from \"../../components/Return/ReturnCreateUpdate\";\n\nconst ReturnCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ReturnCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ReturnCreateUpdatePage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {ReturnListRequest} from \"../../APIRequest/ReturnAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineEdit, AiOutlineEye} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport CurrencyFormat from \"react-currency-format\";\nimport moment from \"moment/moment\";\n\nconst ReturnList = () => {\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await ReturnListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.return.List));\n    let Total=useSelector((state)=>(state.return.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await ReturnListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n    const searchData=async () => {\n        await ReturnListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await ReturnListRequest(1, e.target.value, searchKeyword)\n    }\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await ReturnListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n    const DetailsPopUp = (item) => {\n\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Return List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Customer</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Grand Total</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Shipping Cost</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Vat/Tax</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Other Cost</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Discount</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Date</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item,i)=>\n                                                            <tr>\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">{item.customers[0]['CustomerName']}</p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.GrandTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.ShippingCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.VatTax} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.OtherCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.Discount} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">{moment(item.CreatedDate).format('MMMM Do YYYY')}</p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <button onClick={DetailsPopUp.bind(this,item)} className=\"btn btn-outline-light text-success p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineEye size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ReturnList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ReturnList from \"../../components/Return/ReturnList\";\n\nconst ReturnListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ReturnList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ReturnListPage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {SetCustomerDropDown, SetProductDropDown, SetSaleList, SetSaleListTotal} from \"../redux/state-slice/sale-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\nexport async function SaleListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/SalesList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetSaleList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetSaleListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetSaleList([]))\r\n                store.dispatch(SetSaleListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\nexport async function CustomerDropDownRequest() {\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL+\"/CustomersDropDown\";\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'].length > 0) {\r\n                store.dispatch(SetCustomerDropDown(result.data['data']))\r\n            } else {\r\n                store.dispatch(SetCustomerDropDown([]));\r\n                ErrorToast(\"No Customer Found\");\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\nexport async function ProductDropDownRequest() {\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL+\"/ProductsDropDown\";\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'].length > 0) {\r\n                store.dispatch(SetProductDropDown(result.data['data']))\r\n            } else {\r\n                store.dispatch(SetProductDropDown([]));\r\n                ErrorToast(\"No Product Found\");\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\nexport async function CreateSaleRequest(ParentBody,ChildsBody) {\r\n    try {\r\n\r\n        store.dispatch(ShowLoader())\r\n        let PostBody={\"Parent\":ParentBody, \"Childs\":ChildsBody}\r\n        let URL = BaseURL+\"/CreateSales\"\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true;\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}","import React, {Fragment, useEffect, useRef} from 'react';\nimport {CreateSaleRequest, CustomerDropDownRequest, ProductDropDownRequest} from \"../../APIRequest/SaleAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {BsCartCheck, BsTrash} from \"react-icons/all\";\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\nimport store from \"../../redux/store/store\";\nimport {OnChangeSaleInput, RemoveSaleItem, SetSaleItemList} from \"../../redux/state-slice/sale-slice\";\n\n\n\nconst SalesCreateUpdate = () => {\n\n    let productRef,qtyRef,unitPriceRef=useRef();\n\n    useEffect(()=>{\n        (async () => {\n            await CustomerDropDownRequest();\n            await ProductDropDownRequest();\n        })();\n    },[])\n\n\n    let CustomerDropDown=useSelector((state)=>(state.sale.CustomerDropDown));\n    let ProductDropDown=useSelector((state)=>(state.sale.ProductDropDown));\n    let SaleItemList=useSelector((state)=>(state.sale.SaleItemList));\n    let SaleFormValue=useSelector((state)=>(state.sale.SaleFormValue));\n\n    const OnAddCart = () => {\n       let productValue=productRef.value;\n       let productName=productRef.selectedOptions[0].text;\n       let qtyValue=qtyRef.value;\n       let unitPriceValue=unitPriceRef.value;\n\n       if(IsEmpty(productValue)){\n           ErrorToast(\"Select Product\")\n       }\n       else if(IsEmpty(qtyValue)){\n           ErrorToast(\"Qty Required\")\n       }\n       else if(IsEmpty(unitPriceValue)){\n           ErrorToast(\"Unit Price Required\")\n       }\n       else {\n           let item= {\n               \"ProductID\":productValue,\n               \"ProductName\":productName,\n               \"Qty\":qtyValue,\n               \"UnitCost\":unitPriceValue,\n               \"Total\":(parseInt(qtyValue))*(parseInt(unitPriceValue))\n               }\n           store.dispatch(SetSaleItemList(item))\n       }\n\n    }\n\n\n    const removeCart = (i) => {\n        store.dispatch(RemoveSaleItem(i))\n    }\n\n\n    const CreateNewSale=async () => {\n        // Apply Validation\n       let res= await CreateSaleRequest(SaleFormValue, SaleItemList);\n       alert(res);\n    }\n\n\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4 col-lg-4 mb-3\">\n                        <div className=\"card h-100\">\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <h5 >Create Sales</h5>\n                                    <hr className=\"bg-light\"/>\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Customer</label>\n                                        <select onChange={(e)=>{store.dispatch(OnChangeSaleInput({Name:\"CustomerID\",Value:e.target.value}))}} className=\"form-select form-select-sm\">\n                                            <option value=\"\">Select Customer</option>\n                                            {\n                                                CustomerDropDown.map((item,i)=>{\n                                                    return( <option key={i.toLocaleString()} value={item._id}>{item.CustomerName}</option>)\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Vat/Tax</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeSaleInput({Name:\"VatTax\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Discount</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeSaleInput({Name:\"Discount\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Other Cost</label>\n                                        <input  onChange={(e)=>{store.dispatch(OnChangeSaleInput({Name:\"OtherCost\",Value:e.target.value}))}} className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Shipping Cost</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeSaleInput({Name:\"ShippingCost\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Grand Total</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeSaleInput({Name:\"GrandTotal\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n\n                                    <div className=\"col-12 p-1\">\n                                        <label className=\"form-label\">Note</label>\n                                        <input  onChange={(e)=>{store.dispatch(OnChangeSaleInput({Name:\"Note\",Value:e.target.value}))}}  className=\"form-control form-control-sm\" type=\"number\"/>\n                                    </div>\n\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4 p-2\">\n                                        <button onClick={CreateNewSale} className=\"btn btn-sm my-3 btn-success\">Create</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-8 col-lg-8 mb-3\">\n                        <div className=\"card  h-100\">\n                            <div className=\"card-body\">\n\n                                <div className=\"row\">\n                                    <div className=\"col-6  p-1\">\n                                        <label className=\"form-label\">Select Product</label>\n                                        <select ref={(input)=>productRef=input} className=\"form-select form-select-sm\">\n                                            <option value=\"\">Select Product</option>\n                                            {\n                                                ProductDropDown.map((item,i)=>{\n                                                    return( <option key={i.toLocaleString()} value={item._id}>{item.Name}</option>)\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Qty</label>\n                                        <input ref={(input)=>qtyRef=input}  className=\"form-control form-control-sm\" />\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Unit Price</label>\n                                        <input ref={(input)=>unitPriceRef=input} className=\"form-control form-control-sm\" />\n                                    </div>\n                                    <div className=\"col-2 p-1\">\n                                        <label className=\"form-label\">Add to cart</label>\n                                        <button onClick={OnAddCart} className=\"btn w-100 btn-success btn-sm\"><BsCartCheck/></button>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"table-responsive table-section\">\n                                            <table className=\"table-sm text-center table\">\n                                            <thead className=\"sticky-top bg-white\">\n                                                <tr>\n                                                    <th>Name</th>\n                                                    <th>Qty</th>\n                                                    <th>Unit Price</th>\n                                                    <th>Total</th>\n                                                    <th>Remove</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                            {\n                                                SaleItemList.map((item,i)=>{\n                                                   return(\n                                                       <tr>\n                                                           <td>{item.ProductName}</td>\n                                                           <td>{item.Qty}</td>\n                                                           <td>{item.UnitCost}</td>\n                                                           <td>{item.Total}</td>\n                                                           <td><button onClick={removeCart.bind(this,i)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\"><BsTrash/></button></td>\n                                                       </tr>\n                                                   )\n                                                })\n                                            }\n                                            </tbody>\n                                        </table>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SalesCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport SalesCreateUpdate from \"../../components/Sales/SalesCreateUpdate\";\n\nconst SalesCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <SalesCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default SalesCreateUpdatePage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {SaleListRequest} from \"../../APIRequest/SaleAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineEdit, AiOutlineEye} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport CurrencyFormat from \"react-currency-format\";\nimport moment from \"moment/moment\";\n\nconst SalesList = () => {\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await SaleListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.sale.List));\n    let Total=useSelector((state)=>(state.sale.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await SaleListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n    const searchData=async () => {\n        await SaleListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await SaleListRequest(1, e.target.value, searchKeyword)\n    }\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await SaleListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n    const DetailsPopUp = (item) => {\n\n    }\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Sales List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Customer</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Grand Total</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Shipping Cost</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Vat/Tax</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Other Cost</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Discount</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Date</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item,i)=>\n                                                            <tr>\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">{item.customers[0]['CustomerName']}</p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.GrandTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.ShippingCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.VatTax} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.OtherCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">\n                                                                        <CurrencyFormat value={item.Discount} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                                                    </p>\n                                                                </td>\n\n\n                                                                <td>\n                                                                    <p className=\"text-xs text-start\">{moment(item.CreatedDate).format('MMMM Do YYYY')}</p>\n                                                                </td>\n\n                                                                <td>\n                                                                    <button onClick={DetailsPopUp.bind(this,item)} className=\"btn btn-outline-light text-success p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineEye size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SalesList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport SalesList from \"../../components/Sales/SalesList\";\n\nconst SalesListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                        <SalesList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default SalesListPage;","import store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {SetSupplierList, SetSupplierListTotal} from \"../redux/state-slice/supplier-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nimport {OnChangeSupplierInput, ResetSupplierFormValue} from \"../redux/state-slice/supplier-slice\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\n\r\nexport async function SupplierListRequest(pageNo, perPage, searchKeyword) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/SuppliersList/\"+pageNo+\"/\"+perPage+\"/\"+searchKeyword;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            if (result.data['data'][0]['Rows'].length > 0) {\r\n                store.dispatch(SetSupplierList(result.data['data'][0]['Rows']))\r\n                store.dispatch(SetSupplierListTotal(result.data['data'][0]['Total'][0]['count']))\r\n            } else {\r\n                store.dispatch(SetSupplierList([]))\r\n                store.dispatch(SetSupplierListTotal(0))\r\n                ErrorToast(\"No Data Found\")\r\n            }\r\n        } else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function CreateSupplierRequest(PostBody,ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/CreateSuppliers\"\r\n        if(ObjectID!==0){\r\n            URL = BaseURL+\"/UpdateSuppliers/\"+ObjectID;\r\n        }\r\n        const result = await axios.post(URL,PostBody,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            store.dispatch(ResetSupplierFormValue())\r\n            return  true;\r\n        }\r\n        else if(result.status === 200 && result.data['status'] === \"fail\") {\r\n            if(result.data['data']['keyPattern']['Phone']===1){\r\n                ErrorToast(\"Mobile Number Already Exist\")\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\nexport async function FillSupplierFormRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/SuppliersDetailsByID/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            let FormValue=result.data['data'][0];\r\n            store.dispatch(OnChangeSupplierInput({Name:\"Name\",Value:FormValue['Name']}));\r\n            store.dispatch(OnChangeSupplierInput({Name:\"Phone\",Value:FormValue['Phone']}));\r\n            store.dispatch(OnChangeSupplierInput({Name:\"Email\",Value:FormValue['Email']}));\r\n            store.dispatch(OnChangeSupplierInput({Name:\"Address\",Value:FormValue['Address']}));\r\n            return  true;\r\n        } else {\r\n            debugger;\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        debugger;\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n\r\n\r\nexport async function DeleteSupplierRequest(ObjectID) {\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL = BaseURL+\"/DeleteSupplier/\"+ObjectID;\r\n        const result = await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if (result.status === 200 && result.data['status'] === \"associate\") {\r\n            ErrorToast(result.data['data'])\r\n            return  false;\r\n        }\r\n        if (result.status === 200 && result.data['status'] === \"success\") {\r\n            SuccessToast(\"Request Successful\");\r\n            return  true\r\n        }\r\n        else {\r\n            ErrorToast(\"Request Fail ! Try Again\")\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return  false\r\n    }\r\n}\r\n","import React, {Fragment, useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {ErrorToast, IsEmail, IsEmpty} from \"../../helper/FormHelper\";\nimport store from \"../../redux/store/store\";\nimport {OnChangeSupplierInput} from \"../../redux/state-slice/supplier-slice\";\nimport {CreateSupplierRequest, FillSupplierFormRequest} from \"../../APIRequest/SupplierAPIRequest\";\n\nconst SupplierCreateUpdate = () => {\n\n\n    let FormValue=useSelector((state)=>(state.supplier.FormValue));\n    let navigate=useNavigate();\n    let [ObjectID,SetObjectID]=useState(0);\n    useEffect(()=>{\n        let params= new URLSearchParams(window.location.search);\n        let id=params.get('id');\n        if(id!==null){\n            SetObjectID(id);\n            (async () => {\n                await FillSupplierFormRequest(id);\n            })();\n        }\n    },[])\n\n\n\n    const SaveChange = async () => {\n        if(IsEmpty(FormValue.Name)){\n            ErrorToast(\"Supplier Name Required !\")\n        }\n        else if(IsEmpty(FormValue.Phone)){\n            ErrorToast(\"Supplier Phone  Number Required !\")\n        }\n        else if(IsEmail(FormValue.Email)){\n            ErrorToast(\"Valid Email Address Required !\")\n        }\n        else {\n            if(await CreateSupplierRequest(FormValue,ObjectID)){\n                navigate(\"/SupplierListPage\")\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <h5 >Save Supplier</h5>\n                                    <hr className=\"bg-light\"/>\n\n                                    <div className=\"col-4 p-2\">\n                                        <label className=\"form-label\">Supplier Name</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeSupplierInput({Name:\"Name\",Value:e.target.value}))}} value={FormValue.Name} className=\"form-control form-control-sm\" type=\"text\"/>\n                                    </div>\n                                    <div className=\"col-4 p-2\">\n                                        <label className=\"form-label\">Mobile No</label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeSupplierInput({Name:\"Phone\",Value:e.target.value}))}} value={FormValue.Phone} className=\"form-control form-control-sm\" type=\"text\"/>\n                                    </div>\n                                    <div className=\"col-4 p-2\">\n                                        <label className=\"form-label\">Email </label>\n                                        <input onChange={(e)=>{store.dispatch(OnChangeSupplierInput({Name:\"Email\",Value:e.target.value}))}} value={FormValue.Email} className=\"form-control form-control-sm\" type=\"text\"/>\n                                    </div>\n                                    <div className=\"col-12 p-2\">\n                                        <label className=\"form-label\">Address</label>\n                                        <textarea onChange={(e)=>{store.dispatch(OnChangeSupplierInput({Name:\"Address\",Value:e.target.value}))}} value={FormValue.Address}  className=\"form-control form-control-sm\" rows={4}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4 p-2\">\n                                        <button onClick={SaveChange} className=\"btn btn-sm my-3 btn-success\">Save Change</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SupplierCreateUpdate;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport SupplierCreateUpdate from \"../../components/Supplier/SupplierCreateUpdate\";\n\nconst SupplierCreateUpdatePage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <SupplierCreateUpdate/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default SupplierCreateUpdatePage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport {DeleteSupplierRequest, SupplierListRequest} from \"../../APIRequest/SupplierAPIRequest\";\nimport {DeleteAlert} from \"../../helper/DeleteAlert\";\n\nconst SupplierList = () => {\n\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await SupplierListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.supplier.List));\n    let Total=useSelector((state)=>(state.supplier.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await SupplierListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n\n    const searchData=async () => {\n        await SupplierListRequest(1, perPage, searchKeyword)\n    }\n\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await SupplierListRequest(1, e.target.value, searchKeyword)\n    }\n\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await SupplierListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n\n\n    const DeleteItem = async (id) => {\n        let Result = await DeleteAlert();\n        if(Result.isConfirmed){\n            let DeleteResult= await DeleteSupplierRequest(id)\n            if(DeleteResult){\n                await SupplierListRequest(1,perPage,searchKeyword);\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5> Supplier List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table \">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">#No</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Name</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Phone</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Email</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item,i)=>\n                                                            <tr>\n                                                                <td><p className=\"text-xs text-start\">{i+1}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Name}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Phone}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Email}</p></td>\n                                                                <td>\n                                                                    <Link to={`/SupplierCreateUpdatePage?id=${item._id}`} className=\"btn text-info btn-outline-light p-2 mb-0 btn-sm\">\n                                                                        <AiOutlineEdit size={15} />\n                                                                    </Link>\n                                                                    <button onClick={DeleteItem.bind(this,item._id)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineDelete size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SupplierList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport SupplierList from \"../../components/Supplier/SupplierList\";\n\nconst SupplierListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <SupplierList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default SupplierListPage;","import React, {Fragment, useEffect, useState} from 'react';\nimport {DeleteExpenseTypeRequest, ExpenseTypeListRequest} from \"../../APIRequest/ExpenseTypeAPIRequest\";\nimport {useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/all\";\nimport ReactPaginate from \"react-paginate\";\nimport moment from \"moment/moment\";\nimport {DeleteAlert} from \"../../helper/DeleteAlert\";\n\nconst ExpenseTypeList = () => {\n    let [searchKeyword,setSearchKeyword]=useState(\"0\");\n    let [perPage,setPerPage]=useState(20);\n\n    useEffect(()=>{\n        (async () => {\n            await ExpenseTypeListRequest(1,perPage,searchKeyword);\n        })();\n    },[])\n\n    let DataList=useSelector((state)=>(state.expensetype.List));\n    let Total=useSelector((state)=>(state.expensetype.ListTotal))\n\n    const handlePageClick = async (event) => {\n        await ExpenseTypeListRequest(event.selected + 1, perPage, searchKeyword)\n    };\n    const searchData=async () => {\n        await ExpenseTypeListRequest(1, perPage, searchKeyword)\n    }\n    const perPageOnChange=async (e) => {\n        setPerPage(parseInt(e.target.value))\n        await ExpenseTypeListRequest(1, e.target.value, searchKeyword)\n    }\n    const searchKeywordOnChange=async (e) => {\n        setSearchKeyword(e.target.value)\n        if ((e.target.value).length === 0) {\n            setSearchKeyword(\"0\")\n            await ExpenseTypeListRequest(1, perPage, \"0\")\n        }\n    }\n\n    const TextSearch = (e) => {\n        const rows = document.querySelectorAll('tbody tr')\n        rows.forEach(row => {\n            row.style.display = (row.innerText.includes(e.target.value)) ? '' : 'none'\n        })\n    }\n\n    const DeleteItem = async (id) => {\n        let Result = await DeleteAlert();\n        if(Result.isConfirmed){\n            let DeleteResult= await DeleteExpenseTypeRequest(id)\n            if(DeleteResult){\n                await ExpenseTypeListRequest(1,perPage,searchKeyword);\n            }\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"container-fluid my-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4\">\n                                            <h5>Expense Type List</h5>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <input onKeyUp={TextSearch} placeholder=\"Text Filter\" className=\"form-control form-control-sm\"/>\n                                        </div>\n\n                                        <div className=\"col-2\">\n                                            <select onChange={perPageOnChange} className=\"form-control mx-2 form-select-sm form-select form-control-sm\" >\n                                                <option value=\"20\">20 Per Page</option>\n                                                <option value=\"30\">30 Per Page</option>\n                                                <option value=\"50\">50 Per Page</option>\n                                                <option value=\"100\">100 Per Page</option>\n                                                <option value=\"100\">200 Per Page</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <input onChange={searchKeywordOnChange} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Search..\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n                                                <button onClick={searchData} className=\"btn  btn-success btn-sm mb-0\" type=\"button\">Search</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"table-responsive table-section\">\n                                                <table className=\"table\">\n                                                    <thead className=\"sticky-top bg-white\">\n                                                    <tr>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">#No</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Name</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Created</td>\n                                                        <td className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Action</td>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        DataList.map((item,i)=>\n                                                            <tr>\n                                                                <td><p className=\"text-xs text-start\">{i+1}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{item.Name}</p></td>\n                                                                <td><p className=\"text-xs text-start\">{moment(item.CreatedDate).format('MMMM Do YYYY')}</p></td>\n                                                                <td>\n                                                                    <Link to={`/ExpenseTypeCreateUpdatePage?id=${item._id}`} className=\"btn text-info btn-outline-light p-2 mb-0 btn-sm\">\n                                                                        <AiOutlineEdit size={15} />\n                                                                    </Link>\n                                                                    <button onClick={DeleteItem.bind(this,item._id)} className=\"btn btn-outline-light text-danger p-2 mb-0 btn-sm ms-2\">\n                                                                        <AiOutlineDelete size={15} />\n                                                                    </button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 mt-5\">\n                                            <nav aria-label=\"Page navigation example\">\n                                                <ReactPaginate\n                                                    previousLabel=\"<\"\n                                                    nextLabel=\">\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    previousClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextClassName=\"page-item\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    breakLabel=\"...\"\n                                                    breakClassName=\"page-item\"\n                                                    breakLinkClassName=\"page-link\"\n                                                    pageCount={Total/perPage}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={handlePageClick}\n                                                    containerClassName=\"pagination\"\n                                                    activeClassName=\"active\"\n                                                />\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ExpenseTypeList;","import React, {Fragment, Suspense} from 'react';\nimport MasterLayout from \"../../components/MasterLayout/MasterLayout\";\nimport LazyLoader from \"../../components/MasterLayout/LazyLoader\";\nimport ExpenseTypeList from \"../../components/ExpenseType/ExpenseTypeList\";\n\nconst ExpenseTypeListPage = () => {\n    return (\n        <Fragment>\n            <MasterLayout>\n                <Suspense fallback={<LazyLoader/>}>\n                    <ExpenseTypeList/>\n                </Suspense>\n            </MasterLayout>\n        </Fragment>\n    );\n};\n\nexport default ExpenseTypeListPage;","import React,{Fragment} from 'react';\r\nimport {getToken} from \"./helper/SessionHelper\";\r\nimport {BrowserRouter, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport DashboardPage from \"./pages/Dashboard/DashboardPage\";\r\nimport Page404 from \"./pages/NotFound/Page404\";\r\nimport FullscreenLoader from \"./components/MasterLayout/FullscreenLoader\";\r\nimport LoginPage from \"./pages/Users/LoginPage\";\r\nimport RegistrationPage from \"./pages/Users/RegistrationPage\";\r\nimport SendOTPPage from \"./pages/Users/SendOTPPage\";\r\nimport VerifyOTPPage from \"./pages/Users/VerifyOTPPage\";\r\nimport CreatePasswordPage from \"./pages/Users/CreatePasswordPage\";\r\nimport ProfilePage from \"./pages/Users/ProfilePage\";\r\nimport BrandCreateUpdatePage from \"./pages/Brand/BrandCreateUpdatePage\";\r\nimport BrandListPage from \"./pages/Brand/BrandListPage\";\r\nimport CategoryCreateUpdatePage from \"./pages/Category/CategoryCreateUpdatePage\";\r\nimport CategoryListPage from \"./pages/Category/CategoryListPage\";\r\nimport CustomerCreateUpdatePage from \"./pages/Customer/CustomerCreateUpdatePage\";\r\nimport CustomerListPage from \"./pages/Customer/CustomerListPage\";\r\nimport ExpenseTypeCreateUpdatePage from \"./pages/ExpenseType/ExpenseTypeCreateUpdatePage\";\r\nimport ExpenseListPage from \"./pages/Expense/ExpenseListPage\";\r\nimport ExpenseCreateUpdatePage from \"./pages/Expense/ExpenseCreateUpdatePage\";\r\nimport ProductCreateUpdatePage from \"./pages/Product/ProductCreateUpdatePage\";\r\nimport ProductListPage from \"./pages/Product/ProductListPage\";\r\nimport PurchaseCreateUpdatePage from \"./pages/Purchase/PurchaseCreateUpdatePage\";\r\nimport PurchaseListPage from \"./pages/Purchase/PurchaseListPage\";\r\nimport PurchaseReportPage from \"./pages/Report/PurchaseReportPage\";\r\nimport ReturnReportPage from \"./pages/Report/ReturnReportPage\";\r\nimport SaleReportPage from \"./pages/Report/SaleReportPage\";\r\nimport ExpenseReportPage from \"./pages/Report/ExpenseReportPage\";\r\nimport ReturnCreateUpdatePage from \"./pages/Return/ReturnCreateUpdatePage\";\r\nimport ReturnListPage from \"./pages/Return/ReturnListPage\";\r\nimport SalesCreateUpdatePage from \"./pages/Sales/SalesCreateUpdatePage\";\r\nimport SalesListPage from \"./pages/Sales/SalesListPage\";\r\nimport SupplierCreateUpdatePage from \"./pages/Supplier/SupplierCreateUpdatePage\";\r\nimport SupplierListPage from \"./pages/Supplier/SupplierListPage\";\r\nimport ExpenseTypeList from \"./components/ExpenseType/ExpenseTypeList\";\r\nimport ExpenseTypeListPage from \"./pages/ExpenseType/ExpenseTypeListPage\";\r\n\r\nconst App = () => {\r\n    if(getToken()){\r\n        return (\r\n            <Fragment>\r\n                <BrowserRouter>\r\n                    <Routes>\r\n                        <Route exact path=\"/BrandCreateUpdatePage\" element={<BrandCreateUpdatePage />}/>\r\n                        <Route exact path=\"/BrandListPage\" element={<BrandListPage />}/>\r\n\r\n                        <Route exact path=\"/CategoryCreateUpdatePage\" element={<CategoryCreateUpdatePage />}/>\r\n                        <Route exact path=\"/CategoryListPage\" element={<CategoryListPage />}/>\r\n\r\n                        <Route exact path=\"/CustomerCreateUpdatePage\" element={<CustomerCreateUpdatePage />}/>\r\n                        <Route exact path=\"/CustomerListPage\" element={<CustomerListPage />}/>\r\n\r\n                        <Route exact path=\"/ExpenseTypeCreateUpdatePage\" element={<ExpenseTypeCreateUpdatePage />}/>\r\n                        <Route exact path=\"/ExpenseTypeListPage\" element={<ExpenseTypeListPage />}/>\r\n\r\n                        <Route exact path=\"/ExpenseCreateUpdatePage\" element={<ExpenseCreateUpdatePage />}/>\r\n                        <Route exact path=\"/ExpenseListPage\" element={<ExpenseListPage />}/>\r\n\r\n                        <Route exact path=\"/ProductCreateUpdatePage\" element={<ProductCreateUpdatePage />}/>\r\n                        <Route exact path=\"/ProductListPage\" element={<ProductListPage />}/>\r\n\r\n                        <Route exact path=\"/PurchaseCreateUpdatePage\" element={<PurchaseCreateUpdatePage />}/>\r\n                        <Route exact path=\"/PurchaseListPage\" element={<PurchaseListPage />}/>\r\n\r\n                        <Route exact path=\"/ReturnCreateUpdatePage\" element={<ReturnCreateUpdatePage />}/>\r\n                        <Route exact path=\"/ReturnListPage\" element={<ReturnListPage />}/>\r\n\r\n                        <Route exact path=\"/SalesCreateUpdatePage\" element={<SalesCreateUpdatePage />}/>\r\n                        <Route exact path=\"/SalesListPage\" element={<SalesListPage />}/>\r\n\r\n                        <Route exact path=\"/SupplierCreateUpdatePage\" element={<SupplierCreateUpdatePage />}/>\r\n                        <Route exact path=\"/SupplierListPage\" element={<SupplierListPage />}/>\r\n\r\n                        <Route exact path=\"/PurchaseReportPage\" element={<PurchaseReportPage />}/>\r\n                        <Route exact path=\"/ReturnReportPage\" element={<ReturnReportPage />}/>\r\n                        <Route exact path=\"/SaleReportPage\" element={<SaleReportPage />}/>\r\n                        <Route exact path=\"/ExpenseReportPage\" element={<ExpenseReportPage />}/>\r\n\r\n                        <Route exact path=\"/\" element={<DashboardPage />}/>\r\n                        <Route exact path=\"/Profile\" element={<ProfilePage/>}/>\r\n                        <Route path=\"*\" element={<Page404/>}/>\r\n                    </Routes>\r\n                </BrowserRouter>\r\n                <FullscreenLoader/>\r\n            </Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Fragment>\r\n                <BrowserRouter>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Navigate to=\"/Login\" replace />}/>\r\n                        <Route exact path=\"/Login\" element={<LoginPage />}/>\r\n                        <Route exact path=\"/Registration\" element={<RegistrationPage />}/>\r\n                        <Route exact path=\"/SendOTP\" element={<SendOTPPage/>}/>\r\n                        <Route exact path=\"/VerifyOTP\" element={<VerifyOTPPage/>}/>\r\n                        <Route exact path=\"/CreatePassword\" element={<CreatePasswordPage/>}/>\r\n                        <Route path=\"*\" element={<Page404/>}/>\r\n                    </Routes>\r\n                </BrowserRouter>\r\n                <FullscreenLoader/>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\nexport default App;","import { StrictMode } from \"react\";\r\nimport {createRoot} from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store/store\";\r\nimport \"./assets/css/bootstrap.css\";\r\nimport \"./assets/css/style.css\";\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\nroot.render(\r\n  <StrictMode>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n  </StrictMode>\r\n);\r\n","class SessionHelper{\r\n    setToken(token){\r\n        localStorage.setItem(\"token\",token)\r\n    }\r\n    getToken(){\r\n        return localStorage.getItem(\"token\")\r\n    }\r\n    setUserDetails(UserDetails){\r\n        localStorage.setItem(\"UserDetails\",JSON.stringify(UserDetails))\r\n    }\r\n    getUserDetails(){\r\n        return JSON.parse(localStorage.getItem(\"UserDetails\"))\r\n    }\r\n    setEmail(Email){\r\n        localStorage.setItem(\"Email\",Email)\r\n    }\r\n    getEmail(){\r\n        return localStorage.getItem(\"Email\")\r\n    }\r\n    setOTP(OTP){\r\n        localStorage.setItem(\"OTP\",OTP)\r\n    }\r\n    getOTP(){\r\n        return localStorage.getItem(\"OTP\")\r\n    }\r\n    removeSessions=()=>{\r\n        localStorage.clear();\r\n        window.location.href=\"/login\"\r\n    }\r\n}\r\nexport const {setEmail,getEmail,setOTP,getOTP,setToken,getToken,setUserDetails,getUserDetails,removeSessions}=new SessionHelper();","import {createSlice} from \"@reduxjs/toolkit\";\nexport const productSlice=createSlice({\n    name:'product',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        ProductCategoryDropDown:[],\n        ProductBrandDropDown:[],\n        FormValue:{\n            CategoryID:\"\",\n            BrandID:\"\",\n            Name:\"\",\n            Unit:\"\",\n            Details:\"\"\n        }\n    },\n    reducers:{\n        SetProductList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetProductListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        SetProductBrandDropDown:(state,action)=>{\n            state.ProductBrandDropDown=action.payload\n        },\n        SetProductCategoryDropDown:(state,action)=>{\n            state.ProductCategoryDropDown=action.payload\n        },\n        OnChangeProductInput:(state,action)=>{\n            state.FormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        ResetProductFormValue:(state,action)=>{\n            Object.keys(state.FormValue).forEach((i) => state.FormValue[i] = \"\");\n        }\n    }\n})\n\nexport  const {SetProductList,SetProductListTotal,SetProductBrandDropDown,SetProductCategoryDropDown,OnChangeProductInput,ResetProductFormValue}=productSlice.actions;\nexport default  productSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const purchaseSlice=createSlice({\n    name:'purchase',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        SupplierDropDown:[],\n        ProductDropDown:[],\n        PurchaseFormValue:{\n            SupplierID:\"\",\n            VatTax:\"\",\n            Discount:\"\",\n            OtherCost:\"\",\n            ShippingCost:\"\",\n            GrandTotal:\"\",\n            Note:\"\",\n        },\n        PurchaseItemList:[],\n    },\n    reducers:{\n        SetPurchaseList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetPurchaseListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        SetSupplierDropDown:(state,action)=>{\n            state.SupplierDropDown=action.payload\n        },\n        SetProductDropDown:(state,action)=>{\n            state.ProductDropDown=action.payload\n        },\n        OnChangePurchaseInput:(state,action)=>{\n            state.PurchaseFormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        SetPurchaseItemList:(state,action)=>{\n            state.PurchaseItemList.push(action.payload)\n        },\n        RemovePurchaseItem:(state,action)=>{\n            state.PurchaseItemList.splice(action.payload,1)\n        },\n    }\n})\n\nexport  const {\n    SetPurchaseList,\n    SetPurchaseListTotal,\n    SetSupplierDropDown,\n    SetProductDropDown,\n    OnChangePurchaseInput,\n    SetPurchaseItemList,\n    RemovePurchaseItem\n}=purchaseSlice.actions;\nexport default  purchaseSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const saleSlice=createSlice({\n    name:'sale',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        CustomerDropDown:[],\n        ProductDropDown:[],\n        SaleFormValue:{\n            CustomerID:\"\",\n            VatTax:\"\",\n            Discount:\"\",\n            OtherCost:\"\",\n            ShippingCost:\"\",\n            GrandTotal:\"\",\n            Note:\"\",\n        },\n        SaleItemList:[],\n    },\n    reducers:{\n        SetSaleList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetSaleListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        SetCustomerDropDown:(state,action)=>{\n            state.CustomerDropDown=action.payload\n        },\n        SetProductDropDown:(state,action)=>{\n            state.ProductDropDown=action.payload\n        },\n        OnChangeSaleInput:(state,action)=>{\n            state.SaleFormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        SetSaleItemList:(state,action)=>{\n            state.SaleItemList.push(action.payload)\n        },\n        RemoveSaleItem:(state,action)=>{\n            state.SaleItemList.splice(action.payload,1)\n        },\n    }\n})\n\nexport  const {RemoveSaleItem,SetSaleList,SetProductDropDown,SetSaleItemList,SetSaleListTotal,SetCustomerDropDown,OnChangeSaleInput}=saleSlice.actions;\nexport default  saleSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const supplierSlice=createSlice({\n    name:'supplier',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        FormValue:{\n            Name:\"\",\n            Phone:\"\",\n            Email:\"\",\n            Address:\"\"\n        }\n    },\n    reducers:{\n        SetSupplierList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetSupplierListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        OnChangeSupplierInput:(state,action)=>{\n            state.FormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        ResetSupplierFormValue:(state,action)=>{\n            Object.keys(state.FormValue).forEach((i) => state.FormValue[i] = \"\");\n        }\n    }\n})\n\nexport  const {SetSupplierList,SetSupplierListTotal,OnChangeSupplierInput,ResetSupplierFormValue}=supplierSlice.actions;\nexport default  supplierSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const expenseSlice=createSlice({\n    name:'expense',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        ExpenseTypeDropDown:[],\n        FormValue:{\n            TypeID:\"\",\n            Amount:\"\",\n            Note:\"\"\n        }\n    },\n    reducers:{\n        SetExpenseList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetExpenseListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        SetExpenseTypeDropDown:(state,action)=>{\n            state.ExpenseTypeDropDown=action.payload\n        },\n        OnChangeExpenseInput:(state,action)=>{\n            state.FormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        ResetExpenseFormValue:(state,action)=>{\n            Object.keys(state.FormValue).forEach((i) => state.FormValue[i] = \"\");\n        }\n    }\n})\n\nexport  const {SetExpenseList,SetExpenseListTotal,OnChangeExpenseInput,SetExpenseTypeDropDown,ResetExpenseFormValue}=expenseSlice.actions;\nexport default  expenseSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\n\nexport const customerSlice=createSlice({\n    name:'customer',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        FormValue:{\n            CustomerName:\"\",\n            Phone:\"\",\n            Email:\"\",\n            Address:\"\"\n        }\n    },\n    reducers:{\n        SetCustomerList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetCustomerListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        OnChangeCustomerInput:(state,action)=>{\n            state.FormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        ResetFormValue:(state,action)=>{\n            Object.keys(state.FormValue).forEach((i) => state.FormValue[i] = \"\");\n        }\n\n    }\n})\n\nexport  const {SetCustomerList,SetCustomerListTotal,OnChangeCustomerInput,ResetFormValue}=customerSlice.actions;\nexport default  customerSlice.reducer;","import {configureStore} from \"@reduxjs/toolkit\";\nimport settingsReducer from \"../state-slice/settings-slice\";\nimport profileReducer from \"../state-slice/profile-slice\";\nimport dashboardReducer from \"../state-slice/dashboard-slice\";\nimport brandReducer from \"../state-slice/brand-slice\";\nimport supplierReducer from \"../state-slice/supplier-slice\";\nimport categoryReducer from \"../state-slice/category-slice\";\nimport customerReducer from \"../state-slice/customer-slice\";\nimport expenseReducer from \"../state-slice/expense-slice\";\nimport expensetypeReducer from \"../state-slice/expensetype-slice\";\nimport productReducer from \"../state-slice/product-slice\";\nimport purchaseReducer from \"../state-slice/purchase-slice\";\nimport reportReducer from \"../state-slice/report-slice\";\nimport returnReducer from \"../state-slice/return-slice\"\nimport saleReducer from \"../state-slice/sale-slice\"\n\n\nexport default configureStore({\n    reducer:{\n        settings:settingsReducer,\n        dashboard:dashboardReducer,\n        profile:profileReducer,\n        brand:brandReducer,\n        supplier:supplierReducer,\n        category:categoryReducer,\n        customer:customerReducer,\n        expense:expenseReducer,\n        expensetype:expensetypeReducer,\n        purchase:purchaseReducer,\n        report:reportReducer,\n        product:productReducer,\n        return:returnReducer,\n        sale:saleReducer,\n    }\n})","import {createSlice} from \"@reduxjs/toolkit\";\nexport const returnSlice=createSlice({\n    name:'return',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        CustomerDropDown:[],\n        ProductDropDown:[],\n        ReturnFormValue:{\n            CustomerID:\"\",\n            VatTax:\"\",\n            Discount:\"\",\n            OtherCost:\"\",\n            ShippingCost:\"\",\n            GrandTotal:\"\",\n            Note:\"\",\n        },\n        ReturnItemList:[],\n    },\n    reducers:{\n        SetReturnList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetReturnListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        SetCustomerDropDown:(state,action)=>{\n            state.CustomerDropDown=action.payload\n        },\n        SetProductDropDown:(state,action)=>{\n            state.ProductDropDown=action.payload\n        },\n        OnChangeReturnInput:(state,action)=>{\n            state.ReturnFormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        SetReturnItemList:(state,action)=>{\n            state.ReturnItemList.push(action.payload)\n        },\n        RemoveReturnItem:(state,action)=>{\n            state.ReturnItemList.splice(action.payload,1)\n        },\n    }\n})\n\nexport  const {\n    SetReturnList,\n    SetReturnListTotal,\n    SetCustomerDropDown,\n    SetProductDropDown,\n    OnChangeReturnInput,\n    SetReturnItemList,\n    RemoveReturnItem,\n}=returnSlice.actions;\nexport default  returnSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const brandSlice=createSlice({\n    name:'brand',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        FormValue:{\n            Name:\"\"\n        }\n    },\n    reducers:{\n        SetBrandList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetBrandListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        OnChangeBrandInput:(state,action)=>{\n            state.FormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        ResetBrandFormValue:(state,action)=>{\n            Object.keys(state.FormValue).forEach((i) => state.FormValue[i] = \"\");\n        }\n    }\n})\n\nexport  const {SetBrandList,SetBrandListTotal,OnChangeBrandInput,ResetBrandFormValue}=brandSlice.actions;\nexport default  brandSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const categorySlice=createSlice({\n    name:'category',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        FormValue:{\n            Name:\"\"\n        }\n    },\n    reducers:{\n        SetCategoryList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetCategoryListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        OnChangeCategoryInput:(state,action)=>{\n            state.FormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        ResetCategoryFormValue:(state,action)=>{\n            Object.keys(state.FormValue).forEach((i) => state.FormValue[i] = \"\");\n        }\n    }\n})\n\nexport  const {SetCategoryList,SetCategoryListTotal,OnChangeCategoryInput,ResetCategoryFormValue}=categorySlice.actions;\nexport default  categorySlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const expensetypeSlice=createSlice({\n    name:'expensetype',\n    initialState:{\n        List:[],\n        ListTotal:0,\n        FormValue:{\n            Name:\"\"\n        }\n    },\n    reducers:{\n        SetExpenseTypeList:(state,action)=>{\n            state.List=action.payload\n        },\n        SetExpenseTypeListTotal:(state,action)=>{\n            state.ListTotal=action.payload\n        },\n        OnChangeExpenseTypeInput:(state,action)=>{\n            state.FormValue[`${action.payload.Name}`]=action.payload.Value;\n        },\n        ResetExpenseTypeFormValue:(state,action)=>{\n            Object.keys(state.FormValue).forEach((i) => state.FormValue[i] = \"\");\n        }\n    }\n})\n\nexport  const {SetExpenseTypeList,SetExpenseTypeListTotal,OnChangeExpenseTypeInput,ResetExpenseTypeFormValue}=expensetypeSlice.actions;\nexport default  expensetypeSlice.reducer;","import cogoToast from \"cogo-toast\";\r\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\r\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\nclass FormHelper {\r\n    IsEmpty(value) {\r\n        return value.length === 0;\r\n    }\r\n    IsMobile(value){\r\n        return MobileRegx.test(value);\r\n    }\r\n    IsEmail(value) {\r\n        return !EmailRegx.test(value);\r\n    }\r\n    ErrorToast(msg) {\r\n        cogoToast.error(msg, { position: \"bottom-center\" });\r\n    }\r\n    SuccessToast(msg) {\r\n        cogoToast.success(msg, { position: \"bottom-center\" });\r\n    }\r\n    getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n}\r\nexport const {IsEmpty, IsMobile, IsEmail, ErrorToast, getBase64, SuccessToast} = new FormHelper();","import {createSlice} from \"@reduxjs/toolkit\";\nexport const reportSlice=createSlice({\n    name:'report',\n    initialState:{\n        SalesByDateList:[],\n        ExpensesByDateList:[],\n        PurchaseByDateList:[],\n        ReturnByDateList:[]\n    },\n    reducers:{\n        SetSalesByDateList:(state,action)=>{\n            state.SalesByDateList=action.payload\n        },\n        SetExpensesByDateList:(state,action)=>{\n            state.ExpensesByDateList=action.payload\n        },\n        SetPurchaseByDateList:(state,action)=>{\n            state.PurchaseByDateList=action.payload\n        },\n        SetReturnByDateList:(state,action)=>{\n            state.ReturnByDateList=action.payload\n        }\n    }\n})\n\nexport  const {SetSalesByDateList,SetExpensesByDateList,SetPurchaseByDateList,SetReturnByDateList}=reportSlice.actions;\nexport default  reportSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\nexport const settingsSlice=createSlice({\n    name:'settings',\n    initialState:{\n        loader:\"d-none\"\n    },\n    reducers:{\n        ShowLoader:(state)=>{\n            state.loader=\"\"\n        },\n        HideLoader:(state)=>{\n            state.loader=\"d-none\"\n        }\n    }\n})\nexport  const {ShowLoader,HideLoader}=settingsSlice.actions;\nexport default  settingsSlice.reducer;\n","import {createSlice} from \"@reduxjs/toolkit\";\nexport const profileSlice=createSlice({\n    name:'profile',\n    initialState:{\n        value:[]\n    },\n    reducers:{\n        SetProfile:(state,action)=>{\n            state.value=action.payload\n        }\n    }\n})\nexport  const {SetProfile}=profileSlice.actions;\nexport default  profileSlice.reducer;\n","import {createSlice} from \"@reduxjs/toolkit\";\nexport const dashboardSlice=createSlice({\n    name:'dashboard',\n    initialState:{\n        ExpenseChart:[],\n        PurchaseChart:[],\n        ReturnChart:[],\n        SaleChart:[],\n        ExpenseTotal:0,\n        SaleTotal:0,\n        PurchaseTotal:0,\n        ReturnTotal:0,\n    },\n    reducers:{\n        SetExpenseChart:(state,action)=>{\n            state.ExpenseChart=action.payload\n        },\n        SetSaleChart:(state,action)=>{\n            state.SaleChart=action.payload\n        },\n        SetPurchaseChart:(state,action)=>{\n            state.PurchaseChart=action.payload\n        },\n        SetReturnChart:(state,action)=>{\n            state.ReturnChart=action.payload\n        },\n        SetExpenseTotal:(state,action)=>{\n            state.ExpenseTotal=action.payload\n        },\n        SetSaleTotal:(state,action)=>{\n            state.SaleTotal=action.payload\n        },\n        SetPurchaseTotal:(state,action)=>{\n            state.PurchaseTotal=action.payload\n        },\n        SetReturnTotal:(state,action)=>{\n            state.ReturnTotal=action.payload\n        }\n    }\n})\nexport  const {SetExpenseChart,\n    SetSaleChart,\n    SetPurchaseChart,\n    SetReturnChart,\n    SetExpenseTotal,\n    SetSaleTotal,\n    SetPurchaseTotal,\n    SetReturnTotal}=dashboardSlice.actions;\nexport default  dashboardSlice.reducer;\n"],"sourceRoot":""}